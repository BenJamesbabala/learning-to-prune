===========================================================
python test/test-feature-stability.py
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)

Example 0
Ms. Haag plays Elianti .
(0, 2) SparseBinaryVector([338684, 152056, 1993204, 2922703, 3253698, 1071896, 1551197, 1665376, 148104, 59993, 3745486, 722757, 269012, 3771229, 3147192, 3473956])
(1, 3) SparseBinaryVector([338684, 2702667, 1733903, 1024387, 2652158, 2705626, 253542, 1397046, 3933591, 2311640, 3122393, 2266941, 1785531, 3771229, 3147192, 3473956])
(2, 4) SparseBinaryVector([338684, 3411563, 3948761, 453794, 457320, 1071050, 1113926, 1980865, 3537450, 1867149, 3697824, 1348412, 111987, 3771229, 3147192, 3473956])
(3, 5) SparseBinaryVector([338684, 2571943, 2384708, 808478, 1838455, 1009589, 3026930, 2453682, 813129, 1584891, 75340, 4035949, 1656766, 3771229, 3147192, 3473956])
(0, 3) SparseBinaryVector([338684, 152056, 1993204, 1024387, 2652158, 1071896, 253542, 568104, 3523703, 59993, 3122393, 2245495, 503262, 3771229, 1542365, 3473956])
(1, 4) SparseBinaryVector([338684, 2702667, 1733903, 453794, 457320, 2705626, 1113926, 1797337, 3607639, 2311640, 3697824, 3460187, 736007, 3771229, 1542365, 3473956])
(2, 5) SparseBinaryVector([338684, 3411563, 3948761, 808478, 1838455, 1071050, 3026930, 41278, 4124575, 1867149, 75340, 2298740, 2282198, 3771229, 1542365, 3473956])
(0, 4) SparseBinaryVector([338684, 152056, 1993204, 453794, 457320, 1071896, 1113926, 965766, 2299912, 59993, 3697824, 2591485, 269012, 3771229, 1425381, 3473956])
(1, 5) SparseBinaryVector([338684, 2702667, 1733903, 808478, 1838455, 2705626, 3026930, 2783403, 934125, 2311640, 75340, 2883839, 1656766, 3771229, 1425381, 3473956])

Example 1
The new rate will be payable Feb. 15 .
(0, 2) SparseBinaryVector([338684, 152056, 3338398, 2188215, 1726948, 881264, 227468, 574, 3876825, 4056670, 3707591, 722757, 1785531, 3771229, 3147192, 1399972])
(1, 3) SparseBinaryVector([338684, 2428479, 961671, 463105, 498491, 1778127, 471547, 1475767, 3387539, 1867149, 3707591, 2399991, 1422918, 3771229, 3147192, 1399972])
(2, 4) SparseBinaryVector([338684, 3188042, 1876898, 2501046, 1506390, 3459931, 2747518, 435499, 2330495, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1399972])
(3, 5) SparseBinaryVector([338684, 1003978, 1478041, 3818694, 4194082, 1389916, 2462542, 2970320, 1182893, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1399972])
(4, 6) SparseBinaryVector([338684, 2052538, 1718517, 3987912, 3827902, 2547934, 2132443, 2361338, 3976245, 2797623, 2063698, 1122310, 1422918, 3771229, 3147192, 1399972])
(5, 7) SparseBinaryVector([338684, 11678, 2990025, 658368, 2102564, 3730434, 281494, 3248710, 1616120, 2797623, 3575288, 3702963, 2609650, 3771229, 3147192, 1399972])
(6, 8) SparseBinaryVector([338684, 3310439, 1203112, 2506925, 457320, 937427, 2253475, 164245, 3744234, 1597478, 54795, 2604805, 503571, 3771229, 3147192, 1399972])
(7, 9) SparseBinaryVector([338684, 44187, 3765729, 808478, 1838455, 3280815, 3026930, 4183687, 1335834, 1880878, 75340, 1306576, 3631142, 3771229, 3147192, 1399972])
(0, 3) SparseBinaryVector([338684, 152056, 3338398, 463105, 498491, 881264, 471547, 1642354, 2123547, 4056670, 3707591, 722757, 1785531, 3771229, 1542365, 1399972])
(1, 4) SparseBinaryVector([338684, 2428479, 961671, 2501046, 1506390, 1778127, 2747518, 2507087, 3848312, 1867149, 3707591, 2399991, 1422918, 3771229, 1542365, 1399972])
(2, 5) SparseBinaryVector([338684, 3188042, 1876898, 3818694, 4194082, 3459931, 2462542, 3813613, 1918028, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 1399972])
(3, 6) SparseBinaryVector([338684, 1003978, 1478041, 3987912, 3827902, 1389916, 2132443, 1383709, 1792090, 2797623, 2063698, 1122310, 1422918, 3771229, 1542365, 1399972])
(4, 7) SparseBinaryVector([338684, 2052538, 1718517, 658368, 2102564, 2547934, 281494, 3612891, 3480918, 2797623, 3575288, 3702963, 2609650, 3771229, 1542365, 1399972])
(5, 8) SparseBinaryVector([338684, 11678, 2990025, 2506925, 457320, 3730434, 2253475, 1476895, 3379513, 2797623, 54795, 2604805, 145599, 3771229, 1542365, 1399972])
(6, 9) SparseBinaryVector([338684, 3310439, 1203112, 808478, 1838455, 937427, 3026930, 1465484, 3949248, 1597478, 75340, 4035949, 306182, 3771229, 1542365, 1399972])
(0, 4) SparseBinaryVector([338684, 152056, 3338398, 2501046, 1506390, 881264, 2747518, 3476399, 3356273, 4056670, 3707591, 722757, 1785531, 3771229, 1425381, 1399972])
(1, 5) SparseBinaryVector([338684, 2428479, 961671, 3818694, 4194082, 1778127, 2462542, 1335676, 513721, 1867149, 3707591, 2399991, 1422918, 3771229, 1425381, 1399972])
(2, 6) SparseBinaryVector([338684, 3188042, 1876898, 3987912, 3827902, 3459931, 2132443, 822927, 3120413, 2797623, 2063698, 1122310, 1422918, 3771229, 1425381, 1399972])
(3, 7) SparseBinaryVector([338684, 1003978, 1478041, 658368, 2102564, 1389916, 281494, 1790284, 3259934, 2797623, 3575288, 3702963, 2609650, 3771229, 1425381, 1399972])
(4, 8) SparseBinaryVector([338684, 2052538, 1718517, 2506925, 457320, 2547934, 2253475, 2400436, 346030, 2797623, 54795, 2604805, 145599, 3771229, 1425381, 1399972])
(5, 9) SparseBinaryVector([338684, 11678, 2990025, 808478, 1838455, 3730434, 3026930, 3643294, 470304, 2797623, 75340, 4035949, 2282198, 3771229, 1425381, 1399972])
(0, 5) SparseBinaryVector([338684, 152056, 3338398, 3818694, 4194082, 881264, 2462542, 880135, 3870090, 4056670, 3707591, 722757, 1785531, 3771229, 3457465, 1399972])
(1, 6) SparseBinaryVector([338684, 2428479, 961671, 3987912, 3827902, 1778127, 2132443, 2143668, 3283775, 1867149, 2063698, 3691144, 1422918, 3771229, 3457465, 1399972])
(2, 7) SparseBinaryVector([338684, 3188042, 1876898, 658368, 2102564, 3459931, 281494, 960568, 3193457, 2797623, 3575288, 3702963, 2609650, 3771229, 3457465, 1399972])
(3, 8) SparseBinaryVector([338684, 1003978, 1478041, 2506925, 457320, 1389916, 2253475, 404006, 446894, 2797623, 54795, 2604805, 145599, 3771229, 3457465, 1399972])
(4, 9) SparseBinaryVector([338684, 2052538, 1718517, 808478, 1838455, 2547934, 3026930, 1946789, 2250046, 2797623, 75340, 4035949, 2282198, 3771229, 3457465, 1399972])
(0, 6) SparseBinaryVector([338684, 152056, 3338398, 3987912, 3827902, 881264, 2132443, 2432909, 1954331, 4056670, 2063698, 3693688, 1785531, 3771229, 122813, 1399972])
(1, 7) SparseBinaryVector([338684, 2428479, 961671, 658368, 2102564, 1778127, 281494, 2921830, 355944, 1867149, 3575288, 3353011, 2609650, 3771229, 122813, 1399972])
(2, 8) SparseBinaryVector([338684, 3188042, 1876898, 2506925, 457320, 3459931, 2253475, 3913180, 555858, 2797623, 54795, 2604805, 145599, 3771229, 122813, 1399972])
(3, 9) SparseBinaryVector([338684, 1003978, 1478041, 808478, 1838455, 1389916, 3026930, 2388783, 3259092, 2797623, 75340, 4035949, 2282198, 3771229, 122813, 1399972])
(0, 7) SparseBinaryVector([338684, 152056, 3338398, 658368, 2102564, 881264, 281494, 2742815, 1815053, 4056670, 3575288, 3999500, 1868234, 3771229, 122813, 1399972])
(1, 8) SparseBinaryVector([338684, 2428479, 961671, 2506925, 457320, 1778127, 2253475, 3188754, 183600, 1867149, 54795, 1348412, 145599, 3771229, 122813, 1399972])
(2, 9) SparseBinaryVector([338684, 3188042, 1876898, 808478, 1838455, 3459931, 3026930, 3075693, 624691, 2797623, 75340, 4035949, 2282198, 3771229, 122813, 1399972])
(0, 8) SparseBinaryVector([338684, 152056, 3338398, 2506925, 457320, 881264, 2253475, 965766, 3515699, 4056670, 54795, 2591485, 442787, 3771229, 122813, 1399972])
(1, 9) SparseBinaryVector([338684, 2428479, 961671, 808478, 1838455, 1778127, 3026930, 566425, 2027860, 1867149, 75340, 2298740, 2282198, 3771229, 122813, 1399972])

Example 2
A record date has n't been set .
(0, 2) SparseBinaryVector([338684, 152056, 779564, 1346242, 3233684, 164143, 1420077, 3867901, 3713477, 1900411, 3707591, 722757, 2515413, 3771229, 3147192, 1878324])
(1, 3) SparseBinaryVector([338684, 495325, 802524, 2185026, 3857873, 1999031, 1403759, 1381228, 1908164, 597840, 3707591, 749590, 1422918, 3771229, 3147192, 1878324])
(2, 4) SparseBinaryVector([338684, 3706284, 1943435, 943851, 2277102, 1826728, 2144741, 2288805, 2912173, 2797623, 2641582, 1527384, 1422918, 3771229, 3147192, 1878324])
(3, 5) SparseBinaryVector([338684, 3282588, 1249526, 698218, 934383, 721622, 533004, 1753188, 799126, 2797623, 3791431, 3416862, 2417208, 3771229, 3147192, 1878324])
(4, 6) SparseBinaryVector([338684, 545710, 1264675, 2290912, 996978, 214560, 21596, 680805, 2792353, 3525427, 3707591, 3416862, 979431, 3771229, 3147192, 1878324])
(5, 7) SparseBinaryVector([338684, 3823354, 2830542, 3765912, 457320, 2728035, 975904, 3972804, 1086969, 3270859, 542837, 730537, 1422918, 3771229, 3147192, 1878324])
(6, 8) SparseBinaryVector([338684, 869319, 1820971, 808478, 1838455, 587015, 3026930, 3494997, 680075, 2797623, 75340, 4035949, 2282198, 3771229, 3147192, 1878324])
(0, 3) SparseBinaryVector([338684, 152056, 779564, 2185026, 3857873, 164143, 1403759, 2018915, 3825208, 1900411, 3707591, 722757, 2515413, 3771229, 1542365, 1878324])
(1, 4) SparseBinaryVector([338684, 495325, 802524, 943851, 2277102, 1999031, 2144741, 3343242, 14437, 597840, 2641582, 2284522, 1422918, 3771229, 1542365, 1878324])
(2, 5) SparseBinaryVector([338684, 3706284, 1943435, 698218, 934383, 1826728, 533004, 64076, 2958855, 2797623, 3791431, 3416862, 2417208, 3771229, 1542365, 1878324])
(3, 6) SparseBinaryVector([338684, 3282588, 1249526, 2290912, 996978, 721622, 21596, 1581976, 1072152, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 1878324])
(4, 7) SparseBinaryVector([338684, 545710, 1264675, 3765912, 457320, 214560, 975904, 3623388, 1173141, 3525427, 542837, 2604805, 979431, 3771229, 1542365, 1878324])
(5, 8) SparseBinaryVector([338684, 3823354, 2830542, 808478, 1838455, 2728035, 3026930, 1721200, 76168, 3270859, 75340, 4116118, 2282198, 3771229, 1542365, 1878324])
(0, 4) SparseBinaryVector([338684, 152056, 779564, 943851, 2277102, 164143, 2144741, 2252335, 499369, 1900411, 2641582, 2018994, 2515413, 3771229, 1425381, 1878324])
(1, 5) SparseBinaryVector([338684, 495325, 802524, 698218, 934383, 1999031, 533004, 3971616, 1650987, 597840, 3791431, 749590, 2417208, 3771229, 1425381, 1878324])
(2, 6) SparseBinaryVector([338684, 3706284, 1943435, 2290912, 996978, 1826728, 21596, 2329324, 1394276, 2797623, 3707591, 3416862, 1422918, 3771229, 1425381, 1878324])
(3, 7) SparseBinaryVector([338684, 3282588, 1249526, 3765912, 457320, 721622, 975904, 1145505, 1016370, 2797623, 542837, 2604805, 1422918, 3771229, 1425381, 1878324])
(4, 8) SparseBinaryVector([338684, 545710, 1264675, 808478, 1838455, 214560, 3026930, 3899140, 1287872, 3525427, 75340, 4035949, 932278, 3771229, 1425381, 1878324])
(0, 5) SparseBinaryVector([338684, 152056, 779564, 698218, 934383, 164143, 533004, 2958787, 590690, 1900411, 3791431, 722757, 2999119, 3771229, 3457465, 1878324])
(1, 6) SparseBinaryVector([338684, 495325, 802524, 2290912, 996978, 1999031, 21596, 2819706, 914037, 597840, 3707591, 749590, 1422918, 3771229, 3457465, 1878324])
(2, 7) SparseBinaryVector([338684, 3706284, 1943435, 3765912, 457320, 1826728, 975904, 598845, 91662, 2797623, 542837, 2604805, 1422918, 3771229, 3457465, 1878324])
(3, 8) SparseBinaryVector([338684, 3282588, 1249526, 808478, 1838455, 721622, 3026930, 1896959, 2886165, 2797623, 75340, 4035949, 2282198, 3771229, 3457465, 1878324])
(0, 6) SparseBinaryVector([338684, 152056, 779564, 2290912, 996978, 164143, 21596, 865494, 1928552, 1900411, 3707591, 722757, 2515413, 3771229, 122813, 1878324])
(1, 7) SparseBinaryVector([338684, 495325, 802524, 3765912, 457320, 1999031, 975904, 1780206, 2600390, 597840, 542837, 536512, 1422918, 3771229, 122813, 1878324])
(2, 8) SparseBinaryVector([338684, 3706284, 1943435, 808478, 1838455, 1826728, 3026930, 2362072, 1886790, 2797623, 75340, 4035949, 2282198, 3771229, 122813, 1878324])
(0, 7) SparseBinaryVector([338684, 152056, 779564, 3765912, 457320, 164143, 975904, 965766, 540128, 1900411, 542837, 2591485, 2515413, 3771229, 122813, 1878324])
(1, 8) SparseBinaryVector([338684, 495325, 802524, 808478, 1838455, 1999031, 3026930, 1471791, 3317057, 597840, 75340, 3157121, 2282198, 3771229, 122813, 1878324])

Example 3
Not all those who wrote oppose the changes .
(0, 2) SparseBinaryVector([338684, 152056, 1980066, 500577, 936511, 3057117, 607841, 3141044, 531890, 4056670, 3707591, 722757, 1785531, 3771229, 3147192, 1399972])
(1, 3) SparseBinaryVector([338684, 1362404, 1637884, 1997582, 2670676, 4085858, 2056146, 2999735, 879744, 1867149, 3707591, 2399991, 1422918, 3771229, 3147192, 1399972])
(2, 4) SparseBinaryVector([338684, 1417466, 3235777, 63240, 881856, 2567178, 2654426, 1531126, 956698, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1399972])
(3, 5) SparseBinaryVector([338684, 2248667, 2737675, 3207642, 2559749, 1249658, 3628902, 3441787, 1760659, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1399972])
(4, 6) SparseBinaryVector([338684, 1588086, 3235796, 150411, 1803998, 1717475, 2160468, 3217451, 1433915, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1399972])
(5, 7) SparseBinaryVector([338684, 4125665, 220339, 3456382, 2750483, 2960355, 3153257, 1118889, 1372582, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1399972])
(6, 8) SparseBinaryVector([338684, 3356947, 3186438, 226897, 457320, 4168612, 391124, 1234303, 86804, 2797623, 542837, 2604805, 1422918, 3771229, 3147192, 1399972])
(7, 9) SparseBinaryVector([338684, 2939559, 7808, 808478, 1838455, 2247420, 3026930, 1421467, 208899, 2797623, 75340, 4035949, 2282198, 3771229, 3147192, 1399972])
(0, 3) SparseBinaryVector([338684, 152056, 1980066, 1997582, 2670676, 3057117, 2056146, 2815668, 4003942, 4056670, 3707591, 722757, 1785531, 3771229, 1542365, 1399972])
(1, 4) SparseBinaryVector([338684, 1362404, 1637884, 63240, 881856, 4085858, 2654426, 1942532, 2482745, 1867149, 3707591, 2399991, 1422918, 3771229, 1542365, 1399972])
(2, 5) SparseBinaryVector([338684, 1417466, 3235777, 3207642, 2559749, 2567178, 3628902, 2938149, 1796778, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 1399972])
(3, 6) SparseBinaryVector([338684, 2248667, 2737675, 150411, 1803998, 1249658, 2160468, 1382146, 1502207, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 1399972])
(4, 7) SparseBinaryVector([338684, 1588086, 3235796, 3456382, 2750483, 1717475, 3153257, 1692684, 1546192, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 1399972])
(5, 8) SparseBinaryVector([338684, 4125665, 220339, 226897, 457320, 2960355, 391124, 3999933, 3985897, 2797623, 542837, 2604805, 1422918, 3771229, 1542365, 1399972])
(6, 9) SparseBinaryVector([338684, 3356947, 3186438, 808478, 1838455, 4168612, 3026930, 1054883, 2391974, 2797623, 75340, 4035949, 2282198, 3771229, 1542365, 1399972])
(0, 4) SparseBinaryVector([338684, 152056, 1980066, 63240, 881856, 3057117, 2654426, 1608336, 3518353, 4056670, 3707591, 722757, 1785531, 3771229, 1425381, 1399972])
(1, 5) SparseBinaryVector([338684, 1362404, 1637884, 3207642, 2559749, 4085858, 3628902, 638906, 2889954, 1867149, 3707591, 2399991, 1422918, 3771229, 1425381, 1399972])
(2, 6) SparseBinaryVector([338684, 1417466, 3235777, 150411, 1803998, 2567178, 2160468, 3500872, 1472386, 2797623, 3707591, 3416862, 1422918, 3771229, 1425381, 1399972])
(3, 7) SparseBinaryVector([338684, 2248667, 2737675, 3456382, 2750483, 1249658, 3153257, 4111408, 4120840, 2797623, 3707591, 3416862, 1422918, 3771229, 1425381, 1399972])
(4, 8) SparseBinaryVector([338684, 1588086, 3235796, 226897, 457320, 1717475, 391124, 1724912, 796719, 2797623, 542837, 2604805, 1422918, 3771229, 1425381, 1399972])
(5, 9) SparseBinaryVector([338684, 4125665, 220339, 808478, 1838455, 2960355, 3026930, 1393132, 2938708, 2797623, 75340, 4035949, 2282198, 3771229, 1425381, 1399972])
(0, 5) SparseBinaryVector([338684, 152056, 1980066, 3207642, 2559749, 3057117, 3628902, 792774, 3698762, 4056670, 3707591, 722757, 1785531, 3771229, 3457465, 1399972])
(1, 6) SparseBinaryVector([338684, 1362404, 1637884, 150411, 1803998, 4085858, 2160468, 2282310, 3092505, 1867149, 3707591, 2399991, 1422918, 3771229, 3457465, 1399972])
(2, 7) SparseBinaryVector([338684, 1417466, 3235777, 3456382, 2750483, 2567178, 3153257, 3780143, 1226518, 2797623, 3707591, 3416862, 1422918, 3771229, 3457465, 1399972])
(3, 8) SparseBinaryVector([338684, 2248667, 2737675, 226897, 457320, 1249658, 391124, 2189488, 2550830, 2797623, 542837, 2604805, 1422918, 3771229, 3457465, 1399972])
(4, 9) SparseBinaryVector([338684, 1588086, 3235796, 808478, 1838455, 1717475, 3026930, 2785290, 2024359, 2797623, 75340, 4035949, 2282198, 3771229, 3457465, 1399972])
(0, 6) SparseBinaryVector([338684, 152056, 1980066, 150411, 1803998, 3057117, 2160468, 2683411, 2578828, 4056670, 3707591, 722757, 1785531, 3771229, 122813, 1399972])
(1, 7) SparseBinaryVector([338684, 1362404, 1637884, 3456382, 2750483, 4085858, 3153257, 1250043, 3005139, 1867149, 3707591, 2399991, 1422918, 3771229, 122813, 1399972])
(2, 8) SparseBinaryVector([338684, 1417466, 3235777, 226897, 457320, 2567178, 391124, 1000645, 1146289, 2797623, 542837, 2604805, 1422918, 3771229, 122813, 1399972])
(3, 9) SparseBinaryVector([338684, 2248667, 2737675, 808478, 1838455, 1249658, 3026930, 231761, 2443218, 2797623, 75340, 4035949, 2282198, 3771229, 122813, 1399972])
(0, 7) SparseBinaryVector([338684, 152056, 1980066, 3456382, 2750483, 3057117, 3153257, 363618, 2107569, 4056670, 3707591, 722757, 1785531, 3771229, 122813, 1399972])
(1, 8) SparseBinaryVector([338684, 1362404, 1637884, 226897, 457320, 4085858, 391124, 4156363, 773921, 1867149, 542837, 1348412, 1422918, 3771229, 122813, 1399972])
(2, 9) SparseBinaryVector([338684, 1417466, 3235777, 808478, 1838455, 2567178, 3026930, 2957520, 2098362, 2797623, 75340, 4035949, 2282198, 3771229, 122813, 1399972])
(0, 8) SparseBinaryVector([338684, 152056, 1980066, 226897, 457320, 3057117, 391124, 965766, 2784147, 4056670, 542837, 2591485, 1785531, 3771229, 122813, 1399972])
(1, 9) SparseBinaryVector([338684, 1362404, 1637884, 808478, 1838455, 4085858, 3026930, 1703088, 2499901, 1867149, 75340, 2298740, 2282198, 3771229, 122813, 1399972])

Example 4
The SEC 's Mr. Lane vehemently disputed those estimates .
(0, 2) SparseBinaryVector([338684, 152056, 3338398, 4101032, 3165441, 881264, 3612438, 3581891, 480310, 4056670, 472707, 782059, 1170505, 3771229, 3147192, 3965132])
(1, 3) SparseBinaryVector([338684, 2428479, 2406583, 560026, 250804, 558595, 3047409, 518636, 3413794, 987041, 3242196, 1138895, 800452, 3771229, 3147192, 3965132])
(2, 4) SparseBinaryVector([338684, 13686, 3725094, 271018, 537205, 3866618, 424442, 2743530, 492586, 2982694, 2960899, 2546905, 4092169, 3771229, 3147192, 3965132])
(3, 5) SparseBinaryVector([338684, 2234394, 4072536, 1293928, 2517748, 74037, 1799670, 1039323, 183849, 1517620, 3745486, 3685508, 269012, 3771229, 3147192, 3965132])
(4, 6) SparseBinaryVector([338684, 859769, 2826178, 404756, 3804365, 301721, 3440467, 3210558, 1272792, 2311640, 3707591, 528471, 1785531, 3771229, 3147192, 3965132])
(5, 7) SparseBinaryVector([338684, 259647, 2295114, 3697862, 936511, 2564765, 1901957, 1573798, 2320830, 1867149, 3707591, 2399991, 1422918, 3771229, 3147192, 3965132])
(6, 8) SparseBinaryVector([338684, 123063, 4135381, 1997582, 1590563, 2074420, 3644730, 1172395, 3646194, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 3965132])
(7, 9) SparseBinaryVector([338684, 2501483, 3235777, 2750457, 457320, 402919, 3591733, 101028, 902245, 2797623, 542837, 2604805, 1422918, 3771229, 3147192, 3965132])
(8, 10) SparseBinaryVector([338684, 2248667, 1902569, 808478, 1838455, 99594, 3026930, 231761, 551790, 2797623, 75340, 4035949, 2282198, 3771229, 3147192, 3965132])
(0, 3) SparseBinaryVector([338684, 152056, 3338398, 560026, 250804, 881264, 3047409, 250744, 76637, 4056670, 3242196, 2563226, 494552, 3771229, 1542365, 3965132])
(1, 4) SparseBinaryVector([338684, 2428479, 2406583, 271018, 537205, 558595, 424442, 323287, 895980, 987041, 2960899, 3535577, 800452, 3771229, 1542365, 3965132])
(2, 5) SparseBinaryVector([338684, 13686, 3725094, 1293928, 2517748, 3866618, 1799670, 72134, 3996434, 2982694, 3745486, 2546905, 2935200, 3771229, 1542365, 3965132])
(3, 6) SparseBinaryVector([338684, 2234394, 4072536, 404756, 3804365, 74037, 3440467, 1459160, 173465, 1517620, 3707591, 3685508, 503262, 3771229, 1542365, 3965132])
(4, 7) SparseBinaryVector([338684, 859769, 2826178, 3697862, 936511, 301721, 1901957, 3564504, 3616841, 2311640, 3707591, 528471, 1785531, 3771229, 1542365, 3965132])
(5, 8) SparseBinaryVector([338684, 259647, 2295114, 1997582, 1590563, 2564765, 3644730, 3512705, 1416256, 1867149, 3707591, 2399991, 1422918, 3771229, 1542365, 3965132])
(6, 9) SparseBinaryVector([338684, 123063, 4135381, 2750457, 457320, 2074420, 3591733, 517330, 3708887, 2797623, 542837, 2604805, 1422918, 3771229, 1542365, 3965132])
(7, 10) SparseBinaryVector([338684, 2501483, 3235777, 808478, 1838455, 402919, 3026930, 1798704, 2098362, 2797623, 75340, 4035949, 2282198, 3771229, 1542365, 3965132])
(0, 4) SparseBinaryVector([338684, 152056, 3338398, 271018, 537205, 881264, 424442, 893322, 1897293, 4056670, 2960899, 2245495, 1265756, 3771229, 1425381, 3965132])
(1, 5) SparseBinaryVector([338684, 2428479, 2406583, 1293928, 2517748, 558595, 1799670, 2670539, 3039716, 987041, 3745486, 2399991, 800452, 3771229, 1425381, 3965132])
(2, 6) SparseBinaryVector([338684, 13686, 3725094, 404756, 3804365, 3866618, 3440467, 4011116, 1512167, 2982694, 3707591, 2546905, 2935200, 3771229, 1425381, 3965132])
(3, 7) SparseBinaryVector([338684, 2234394, 4072536, 3697862, 936511, 74037, 1901957, 4185469, 1491084, 1517620, 3707591, 3685508, 503262, 3771229, 1425381, 3965132])
(4, 8) SparseBinaryVector([338684, 859769, 2826178, 1997582, 1590563, 301721, 3644730, 260631, 694042, 2311640, 3707591, 528471, 1785531, 3771229, 1425381, 3965132])
(5, 9) SparseBinaryVector([338684, 259647, 2295114, 2750457, 457320, 2564765, 3591733, 3260535, 1369919, 1867149, 542837, 1348412, 1422918, 3771229, 1425381, 3965132])
(6, 10) SparseBinaryVector([338684, 123063, 4135381, 808478, 1838455, 2074420, 3026930, 418776, 1648182, 2797623, 75340, 4035949, 2282198, 3771229, 1425381, 3965132])
(0, 5) SparseBinaryVector([338684, 152056, 3338398, 1293928, 2517748, 881264, 1799670, 1714371, 4122442, 4056670, 3745486, 722757, 736007, 3771229, 3457465, 3965132])
(1, 6) SparseBinaryVector([338684, 2428479, 2406583, 404756, 3804365, 558595, 3440467, 457331, 3764951, 987041, 3707591, 2399991, 800452, 3771229, 3457465, 3965132])
(2, 7) SparseBinaryVector([338684, 13686, 3725094, 3697862, 936511, 3866618, 1901957, 101229, 683788, 2982694, 3707591, 2546905, 2935200, 3771229, 3457465, 3965132])
(3, 8) SparseBinaryVector([338684, 2234394, 4072536, 1997582, 1590563, 74037, 3644730, 4058620, 3833662, 1517620, 3707591, 3685508, 503262, 3771229, 3457465, 3965132])
(4, 9) SparseBinaryVector([338684, 859769, 2826178, 2750457, 457320, 301721, 3591733, 619652, 914060, 2311640, 542837, 3460187, 1785531, 3771229, 3457465, 3965132])
(5, 10) SparseBinaryVector([338684, 259647, 2295114, 808478, 1838455, 2564765, 3026930, 1263315, 3835814, 1867149, 75340, 2298740, 2282198, 3771229, 3457465, 3965132])
(0, 6) SparseBinaryVector([338684, 152056, 3338398, 404756, 3804365, 881264, 3440467, 4139789, 3970345, 4056670, 3707591, 722757, 1785531, 3771229, 122813, 3965132])
(1, 7) SparseBinaryVector([338684, 2428479, 2406583, 3697862, 936511, 558595, 1901957, 25389, 3157275, 987041, 3707591, 2399991, 800452, 3771229, 122813, 3965132])
(2, 8) SparseBinaryVector([338684, 13686, 3725094, 1997582, 1590563, 3866618, 3644730, 2647651, 2192940, 2982694, 3707591, 2546905, 2935200, 3771229, 122813, 3965132])
(3, 9) SparseBinaryVector([338684, 2234394, 4072536, 2750457, 457320, 74037, 3591733, 2023124, 3232792, 1517620, 542837, 2272562, 503262, 3771229, 122813, 3965132])
(4, 10) SparseBinaryVector([338684, 859769, 2826178, 808478, 1838455, 301721, 3026930, 2222068, 1348520, 2311640, 75340, 2883839, 1656766, 3771229, 122813, 3965132])
(0, 7) SparseBinaryVector([338684, 152056, 3338398, 3697862, 936511, 881264, 1901957, 3141044, 3387154, 4056670, 3707591, 722757, 1785531, 3771229, 122813, 3965132])
(1, 8) SparseBinaryVector([338684, 2428479, 2406583, 1997582, 1590563, 558595, 3644730, 2406460, 3451245, 987041, 3707591, 2399991, 800452, 3771229, 122813, 3965132])
(2, 9) SparseBinaryVector([338684, 13686, 3725094, 2750457, 457320, 3866618, 3591733, 3943389, 3544522, 2982694, 542837, 2546905, 2935200, 3771229, 122813, 3965132])
(3, 10) SparseBinaryVector([338684, 2234394, 4072536, 808478, 1838455, 74037, 3026930, 2145978, 2160871, 1517620, 75340, 2272562, 3011915, 3771229, 122813, 3965132])
(0, 8) SparseBinaryVector([338684, 152056, 3338398, 1997582, 1590563, 881264, 3644730, 1124287, 3406070, 4056670, 3707591, 722757, 1785531, 3771229, 122813, 3965132])
(1, 9) SparseBinaryVector([338684, 2428479, 2406583, 2750457, 457320, 558595, 3591733, 3188754, 1361735, 987041, 542837, 1348412, 800452, 3771229, 122813, 3965132])
(2, 10) SparseBinaryVector([338684, 13686, 3725094, 808478, 1838455, 3866618, 3026930, 3372803, 3633068, 2982694, 75340, 2546905, 4092169, 3771229, 122813, 3965132])
(0, 9) SparseBinaryVector([338684, 152056, 3338398, 2750457, 457320, 881264, 3591733, 965766, 1234162, 4056670, 542837, 2591485, 1785531, 3771229, 122813, 3965132])
(1, 10) SparseBinaryVector([338684, 2428479, 2406583, 808478, 1838455, 558595, 3026930, 566425, 3228914, 987041, 75340, 2298740, 800452, 3771229, 122813, 3965132])

Example 5
Some 4,300 institutions are part of the pension fund .
(0, 2) SparseBinaryVector([338684, 152056, 368177, 1648780, 2148613, 859454, 668240, 2835461, 418008, 4056670, 3049619, 722757, 3282082, 3771229, 3147192, 3965132])
(1, 3) SparseBinaryVector([338684, 2936677, 3636163, 3776319, 1652609, 2530020, 2865595, 2540859, 1423775, 1399669, 3707591, 2399991, 2360691, 3771229, 3147192, 3965132])
(2, 4) SparseBinaryVector([338684, 3335908, 2407463, 2279077, 2771664, 2505604, 1094404, 94135, 562258, 2038699, 3707591, 4133175, 1422918, 3771229, 3147192, 3965132])
(3, 5) SparseBinaryVector([338684, 806058, 714564, 2570435, 1925861, 1564579, 351696, 500661, 596323, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 3965132])
(4, 6) SparseBinaryVector([338684, 524029, 984710, 2933374, 1803998, 1763429, 473676, 2417161, 663132, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 3965132])
(5, 7) SparseBinaryVector([338684, 1643353, 4099204, 3456382, 2373321, 2880436, 3916510, 1996663, 4033887, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 3965132])
(6, 8) SparseBinaryVector([338684, 1633415, 3186438, 510306, 2102750, 525589, 4075769, 1688895, 2141133, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 3965132])
(7, 9) SparseBinaryVector([338684, 2939559, 3589380, 3706114, 457320, 1194984, 1956038, 963573, 2536205, 2797623, 542837, 2604805, 1422918, 3771229, 3147192, 3965132])
(8, 10) SparseBinaryVector([338684, 1942930, 3067421, 808478, 1838455, 1572288, 3026930, 3302891, 3210523, 2797623, 75340, 4035949, 2282198, 3771229, 3147192, 3965132])
(0, 3) SparseBinaryVector([338684, 152056, 368177, 3776319, 1652609, 859454, 2865595, 528561, 2479083, 4056670, 3707591, 722757, 1785531, 3771229, 1542365, 3965132])
(1, 4) SparseBinaryVector([338684, 2936677, 3636163, 2279077, 2771664, 2530020, 1094404, 875873, 272682, 1399669, 3707591, 2399991, 2360691, 3771229, 1542365, 3965132])
(2, 5) SparseBinaryVector([338684, 3335908, 2407463, 2570435, 1925861, 2505604, 351696, 2456232, 2740963, 2038699, 3707591, 4133175, 1422918, 3771229, 1542365, 3965132])
(3, 6) SparseBinaryVector([338684, 806058, 714564, 2933374, 1803998, 1564579, 473676, 1577498, 3070557, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 3965132])
(4, 7) SparseBinaryVector([338684, 524029, 984710, 3456382, 2373321, 1763429, 3916510, 3856612, 4152372, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 3965132])
(5, 8) SparseBinaryVector([338684, 1643353, 4099204, 510306, 2102750, 2880436, 4075769, 1452216, 465256, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 3965132])
(6, 9) SparseBinaryVector([338684, 1633415, 3186438, 3706114, 457320, 525589, 1956038, 1224013, 2183116, 2797623, 542837, 2604805, 1422918, 3771229, 1542365, 3965132])
(7, 10) SparseBinaryVector([338684, 2939559, 3589380, 808478, 1838455, 1194984, 3026930, 1421467, 1362269, 2797623, 75340, 4035949, 2282198, 3771229, 1542365, 3965132])
(0, 4) SparseBinaryVector([338684, 152056, 368177, 2279077, 2771664, 859454, 1094404, 3945163, 4158232, 4056670, 3707591, 722757, 1785531, 3771229, 1425381, 3965132])
(1, 5) SparseBinaryVector([338684, 2936677, 3636163, 2570435, 1925861, 2530020, 351696, 2777186, 3619573, 1399669, 3707591, 2399991, 2360691, 3771229, 1425381, 3965132])
(2, 6) SparseBinaryVector([338684, 3335908, 2407463, 2933374, 1803998, 2505604, 473676, 423406, 1025840, 2038699, 3707591, 4133175, 1422918, 3771229, 1425381, 3965132])
(3, 7) SparseBinaryVector([338684, 806058, 714564, 3456382, 2373321, 1564579, 3916510, 4026773, 3141442, 2797623, 3707591, 3416862, 1422918, 3771229, 1425381, 3965132])
(4, 8) SparseBinaryVector([338684, 524029, 984710, 510306, 2102750, 1763429, 4075769, 2546492, 4037999, 2797623, 3707591, 3416862, 1422918, 3771229, 1425381, 3965132])
(5, 9) SparseBinaryVector([338684, 1643353, 4099204, 3706114, 457320, 2880436, 1956038, 782494, 2296915, 2797623, 542837, 2604805, 1422918, 3771229, 1425381, 3965132])
(6, 10) SparseBinaryVector([338684, 1633415, 3186438, 808478, 1838455, 525589, 3026930, 986822, 2391974, 2797623, 75340, 4035949, 2282198, 3771229, 1425381, 3965132])
(0, 5) SparseBinaryVector([338684, 152056, 368177, 2570435, 1925861, 859454, 351696, 168112, 1258695, 4056670, 3707591, 722757, 1785531, 3771229, 3457465, 3965132])
(1, 6) SparseBinaryVector([338684, 2936677, 3636163, 2933374, 1803998, 2530020, 473676, 1815200, 1322995, 1399669, 3707591, 2399991, 2360691, 3771229, 3457465, 3965132])
(2, 7) SparseBinaryVector([338684, 3335908, 2407463, 3456382, 2373321, 2505604, 3916510, 427252, 1428788, 2038699, 3707591, 4133175, 1422918, 3771229, 3457465, 3965132])
(3, 8) SparseBinaryVector([338684, 806058, 714564, 510306, 2102750, 1564579, 4075769, 3539787, 3808628, 2797623, 3707591, 3416862, 1422918, 3771229, 3457465, 3965132])
(4, 9) SparseBinaryVector([338684, 524029, 984710, 3706114, 457320, 1763429, 1956038, 3496362, 4066280, 2797623, 542837, 2604805, 1422918, 3771229, 3457465, 3965132])
(5, 10) SparseBinaryVector([338684, 1643353, 4099204, 808478, 1838455, 2880436, 3026930, 3146996, 1744888, 2797623, 75340, 4035949, 2282198, 3771229, 3457465, 3965132])
(0, 6) SparseBinaryVector([338684, 152056, 368177, 2933374, 1803998, 859454, 473676, 2683411, 1386298, 4056670, 3707591, 722757, 1785531, 3771229, 122813, 3965132])
(1, 7) SparseBinaryVector([338684, 2936677, 3636163, 3456382, 2373321, 2530020, 3916510, 3108980, 2706015, 1399669, 3707591, 2399991, 2360691, 3771229, 122813, 3965132])
(2, 8) SparseBinaryVector([338684, 3335908, 2407463, 510306, 2102750, 2505604, 4075769, 3083316, 2544918, 2038699, 3707591, 4133175, 1422918, 3771229, 122813, 3965132])
(3, 9) SparseBinaryVector([338684, 806058, 714564, 3706114, 457320, 1564579, 1956038, 3079774, 3938480, 2797623, 542837, 2604805, 1422918, 3771229, 122813, 3965132])
(4, 10) SparseBinaryVector([338684, 524029, 984710, 808478, 1838455, 1763429, 3026930, 1511178, 2394507, 2797623, 75340, 4035949, 2282198, 3771229, 122813, 3965132])
(0, 7) SparseBinaryVector([338684, 152056, 368177, 3456382, 2373321, 859454, 3916510, 3733299, 3265564, 4056670, 3707591, 722757, 1785531, 3771229, 122813, 3965132])
(1, 8) SparseBinaryVector([338684, 2936677, 3636163, 510306, 2102750, 2530020, 4075769, 314259, 3414870, 1399669, 3707591, 2399991, 2360691, 3771229, 122813, 3965132])
(2, 9) SparseBinaryVector([338684, 3335908, 2407463, 3706114, 457320, 2505604, 1956038, 4163807, 459827, 2038699, 542837, 4133175, 1422918, 3771229, 122813, 3965132])
(3, 10) SparseBinaryVector([338684, 806058, 714564, 808478, 1838455, 1564579, 3026930, 582832, 1596723, 2797623, 75340, 4035949, 2282198, 3771229, 122813, 3965132])
(0, 8) SparseBinaryVector([338684, 152056, 368177, 510306, 2102750, 859454, 4075769, 4005949, 52141, 4056670, 3707591, 722757, 1785531, 3771229, 122813, 3965132])
(1, 9) SparseBinaryVector([338684, 2936677, 3636163, 3706114, 457320, 2530020, 1956038, 3789473, 3393028, 1399669, 542837, 1348412, 2360691, 3771229, 122813, 3965132])
(2, 10) SparseBinaryVector([338684, 3335908, 2407463, 808478, 1838455, 2505604, 3026930, 3898611, 3802098, 2038699, 75340, 4133175, 2282198, 3771229, 122813, 3965132])
(0, 9) SparseBinaryVector([338684, 152056, 368177, 3706114, 457320, 859454, 1956038, 965766, 3898232, 4056670, 542837, 2591485, 1785531, 3771229, 122813, 3965132])
(1, 10) SparseBinaryVector([338684, 2936677, 3636163, 808478, 1838455, 2530020, 3026930, 1986678, 825196, 1399669, 75340, 2298740, 2360691, 3771229, 122813, 3965132])

Example 6
Bach 's `` Air '' followed .
(0, 2) SparseBinaryVector([338684, 152056, 2626264, 560026, 18386, 3981434, 556354, 1622943, 2862925, 4056670, 3242196, 1943180, 494552, 3771229, 3147192, 1003022])
(1, 3) SparseBinaryVector([338684, 4173239, 3725094, 550765, 1996988, 2458129, 1218877, 2051337, 1236544, 2345114, 2816284, 3535577, 4092169, 3771229, 3147192, 1003022])
(2, 4) SparseBinaryVector([338684, 2234394, 1440678, 2609958, 3484358, 3961722, 3311651, 2252829, 2322001, 1517620, 2166571, 3685508, 1875912, 3771229, 3147192, 1003022])
(3, 5) SparseBinaryVector([338684, 741693, 2465683, 3291714, 3041847, 1849467, 1093482, 257439, 3751803, 2312670, 230444, 3501458, 1017720, 3771229, 3147192, 1003022])
(4, 6) SparseBinaryVector([338684, 3079933, 3652944, 402205, 457320, 3277695, 647237, 3070606, 1907188, 547472, 542837, 1348412, 1071621, 3771229, 3147192, 1003022])
(5, 7) SparseBinaryVector([338684, 2057723, 2434162, 808478, 1838455, 1992185, 3026930, 2488252, 1233472, 4151532, 75340, 3122997, 2282198, 3771229, 3147192, 1003022])
(0, 3) SparseBinaryVector([338684, 152056, 2626264, 550765, 1996988, 3981434, 1218877, 1978822, 2686652, 4056670, 2816284, 2245495, 3035423, 3771229, 1542365, 1003022])
(1, 4) SparseBinaryVector([338684, 4173239, 3725094, 2609958, 3484358, 2458129, 3311651, 2891362, 2221212, 2345114, 2166571, 1712803, 2935200, 3771229, 1542365, 1003022])
(2, 5) SparseBinaryVector([338684, 2234394, 1440678, 3291714, 3041847, 3961722, 1093482, 1034314, 3765110, 1517620, 230444, 3685508, 911272, 3771229, 1542365, 1003022])
(3, 6) SparseBinaryVector([338684, 741693, 2465683, 402205, 457320, 1849467, 647237, 2812944, 1860022, 2312670, 542837, 997024, 1785531, 3771229, 1542365, 1003022])
(4, 7) SparseBinaryVector([338684, 3079933, 3652944, 808478, 1838455, 3277695, 3026930, 383617, 1879408, 547472, 75340, 2298740, 1071621, 3771229, 1542365, 1003022])
(0, 4) SparseBinaryVector([338684, 152056, 2626264, 2609958, 3484358, 3981434, 3311651, 464263, 965947, 4056670, 2166571, 1859299, 736007, 3771229, 1425381, 1003022])
(1, 5) SparseBinaryVector([338684, 4173239, 3725094, 3291714, 3041847, 2458129, 1093482, 3247861, 490003, 2345114, 230444, 2399991, 2935200, 3771229, 1425381, 1003022])
(2, 6) SparseBinaryVector([338684, 2234394, 1440678, 402205, 457320, 3961722, 647237, 2023124, 3929019, 1517620, 542837, 2272562, 400759, 3771229, 1425381, 1003022])
(3, 7) SparseBinaryVector([338684, 741693, 2465683, 808478, 1838455, 1849467, 3026930, 584061, 2217529, 2312670, 75340, 2153995, 1656766, 3771229, 1425381, 1003022])
(0, 5) SparseBinaryVector([338684, 152056, 2626264, 3291714, 3041847, 3981434, 1093482, 3415484, 3637485, 4056670, 230444, 722757, 1017720, 3771229, 3457465, 1003022])
(1, 6) SparseBinaryVector([338684, 4173239, 3725094, 402205, 457320, 2458129, 647237, 1987702, 2345881, 2345114, 542837, 1348412, 2935200, 3771229, 3457465, 1003022])
(2, 7) SparseBinaryVector([338684, 2234394, 1440678, 808478, 1838455, 3961722, 3026930, 2145978, 48398, 1517620, 75340, 2272562, 3289773, 3771229, 3457465, 1003022])
(0, 6) SparseBinaryVector([338684, 152056, 2626264, 402205, 457320, 3981434, 647237, 965766, 1207899, 4056670, 542837, 2591485, 1785531, 3771229, 122813, 1003022])
(1, 7) SparseBinaryVector([338684, 4173239, 3725094, 808478, 1838455, 2458129, 3026930, 1899445, 3633068, 2345114, 75340, 2298740, 4092169, 3771229, 122813, 1003022])

Example 7
Or was it because Ms. Collins had gone ?
(0, 2) SparseBinaryVector([338684, 152056, 405692, 3879979, 3062653, 3356350, 2416702, 1413584, 2319780, 682070, 3707591, 722757, 1830222, 3771229, 3147192, 1399972])
(1, 3) SparseBinaryVector([338684, 2967297, 1373132, 3889641, 873782, 3806953, 3322428, 2709912, 1931902, 2192072, 3707591, 3108693, 1422918, 3771229, 3147192, 1399972])
(2, 4) SparseBinaryVector([338684, 2648115, 912721, 530260, 2908511, 1933901, 847347, 542701, 840452, 2797623, 712301, 2044888, 1422918, 3771229, 3147192, 1399972])
(3, 5) SparseBinaryVector([338684, 499855, 264452, 712188, 891699, 508260, 3445435, 2102274, 1597706, 2797623, 2960899, 3530853, 688792, 3771229, 3147192, 1399972])
(4, 6) SparseBinaryVector([338684, 3725552, 1993204, 429114, 1175450, 1881249, 3011823, 786800, 787427, 3000607, 3745486, 3416862, 269012, 3771229, 3147192, 1399972])
(5, 7) SparseBinaryVector([338684, 2702667, 61709, 696992, 2635742, 3987103, 823127, 318762, 653991, 2311640, 3707591, 528471, 1785531, 3771229, 3147192, 1399972])
(6, 8) SparseBinaryVector([338684, 1455184, 326834, 1994995, 3977351, 1423734, 690207, 1962774, 2432124, 1867149, 799052, 2764380, 1422918, 3771229, 3147192, 1399972])
(7, 9) SparseBinaryVector([338684, 3103205, 2289375, 1074088, 1838455, 3754355, 718648, 1119791, 153225, 2797623, 2374206, 4035949, 2735073, 3771229, 3147192, 1399972])
(0, 3) SparseBinaryVector([338684, 152056, 405692, 3889641, 873782, 3356350, 3322428, 2553721, 245295, 682070, 3707591, 722757, 1830222, 3771229, 1542365, 1399972])
(1, 4) SparseBinaryVector([338684, 2967297, 1373132, 530260, 2908511, 3806953, 847347, 1808691, 4177049, 2192072, 712301, 2150392, 1422918, 3771229, 1542365, 1399972])
(2, 5) SparseBinaryVector([338684, 2648115, 912721, 712188, 891699, 1933901, 3445435, 1541275, 4015454, 2797623, 2960899, 3530853, 688792, 3771229, 1542365, 1399972])
(3, 6) SparseBinaryVector([338684, 499855, 264452, 429114, 1175450, 508260, 3011823, 877741, 2098692, 2797623, 3745486, 3416862, 111987, 3771229, 1542365, 1399972])
(4, 7) SparseBinaryVector([338684, 3725552, 1993204, 696992, 2635742, 1881249, 823127, 3281694, 3416252, 3000607, 3707591, 3416862, 503262, 3771229, 1542365, 1399972])
(5, 8) SparseBinaryVector([338684, 2702667, 61709, 1994995, 3977351, 3987103, 690207, 1703484, 175055, 2311640, 799052, 1773150, 1785531, 3771229, 1542365, 1399972])
(6, 9) SparseBinaryVector([338684, 1455184, 326834, 1074088, 1838455, 1423734, 718648, 2334247, 1954698, 1867149, 2374206, 2298740, 2735073, 3771229, 1542365, 1399972])
(0, 4) SparseBinaryVector([338684, 152056, 405692, 530260, 2908511, 3356350, 847347, 1744554, 1667901, 682070, 712301, 2563226, 1830222, 3771229, 1425381, 1399972])
(1, 5) SparseBinaryVector([338684, 2967297, 1373132, 712188, 891699, 3806953, 3445435, 568240, 1603531, 2192072, 2960899, 2150392, 688792, 3771229, 1425381, 1399972])
(2, 6) SparseBinaryVector([338684, 2648115, 912721, 429114, 1175450, 1933901, 3011823, 209167, 2664857, 2797623, 3745486, 3416862, 111987, 3771229, 1425381, 1399972])
(3, 7) SparseBinaryVector([338684, 499855, 264452, 696992, 2635742, 508260, 823127, 1581659, 3292537, 2797623, 3707591, 3416862, 1422918, 3771229, 1425381, 1399972])
(4, 8) SparseBinaryVector([338684, 3725552, 1993204, 1994995, 3977351, 1881249, 690207, 737495, 1033033, 3000607, 799052, 961559, 503262, 3771229, 1425381, 1399972])
(5, 9) SparseBinaryVector([338684, 2702667, 61709, 1074088, 1838455, 3987103, 718648, 2783403, 2988575, 2311640, 2374206, 2883839, 1878237, 3771229, 1425381, 1399972])
(0, 5) SparseBinaryVector([338684, 152056, 405692, 712188, 891699, 3356350, 3445435, 135630, 3918741, 682070, 2960899, 2245495, 3881779, 3771229, 3457465, 1399972])
(1, 6) SparseBinaryVector([338684, 2967297, 1373132, 429114, 1175450, 3806953, 3011823, 2249703, 513903, 2192072, 3745486, 3108693, 111987, 3771229, 3457465, 1399972])
(2, 7) SparseBinaryVector([338684, 2648115, 912721, 696992, 2635742, 1933901, 823127, 2910765, 1779610, 2797623, 3707591, 3416862, 1422918, 3771229, 3457465, 1399972])
(3, 8) SparseBinaryVector([338684, 499855, 264452, 1994995, 3977351, 508260, 690207, 380472, 1555494, 2797623, 799052, 961559, 1422918, 3771229, 3457465, 1399972])
(4, 9) SparseBinaryVector([338684, 3725552, 1993204, 1074088, 1838455, 1881249, 718648, 2684194, 2673611, 3000607, 2374206, 4035949, 320481, 3771229, 3457465, 1399972])
(0, 6) SparseBinaryVector([338684, 152056, 405692, 429114, 1175450, 3356350, 3011823, 2124265, 35539, 682070, 3745486, 722757, 3881779, 3771229, 122813, 1399972])
(1, 7) SparseBinaryVector([338684, 2967297, 1373132, 696992, 2635742, 3806953, 823127, 1912353, 2173322, 2192072, 3707591, 3108693, 1422918, 3771229, 122813, 1399972])
(2, 8) SparseBinaryVector([338684, 2648115, 912721, 1994995, 3977351, 1933901, 690207, 3624608, 2529238, 2797623, 799052, 961559, 1422918, 3771229, 122813, 1399972])
(3, 9) SparseBinaryVector([338684, 499855, 264452, 1074088, 1838455, 508260, 718648, 2968587, 1178211, 2797623, 2374206, 4035949, 2735073, 3771229, 122813, 1399972])
(0, 7) SparseBinaryVector([338684, 152056, 405692, 696992, 2635742, 3356350, 823127, 2289516, 2500792, 682070, 3707591, 722757, 1830222, 3771229, 122813, 1399972])
(1, 8) SparseBinaryVector([338684, 2967297, 1373132, 1994995, 3977351, 3806953, 690207, 1359762, 1372619, 2192072, 799052, 3108693, 1422918, 3771229, 122813, 1399972])
(2, 9) SparseBinaryVector([338684, 2648115, 912721, 1074088, 1838455, 1933901, 718648, 4057591, 3607264, 2797623, 2374206, 4035949, 2735073, 3771229, 122813, 1399972])
(0, 8) SparseBinaryVector([338684, 152056, 405692, 1994995, 3977351, 3356350, 690207, 3999289, 1711203, 682070, 799052, 1723495, 1830222, 3771229, 122813, 1399972])
(1, 9) SparseBinaryVector([338684, 2967297, 1373132, 1074088, 1838455, 3806953, 718648, 1557925, 254576, 2192072, 2374206, 3108693, 2735073, 3771229, 122813, 1399972])

Example 8
Is this the future of chamber music ?
(0, 2) SparseBinaryVector([338684, 152056, 1587099, 1702960, 1803998, 2536557, 1820910, 2683411, 2706459, 682070, 3707591, 722757, 1830222, 3771229, 3147192, 1878324])
(1, 3) SparseBinaryVector([338684, 868995, 730403, 3456382, 2184528, 2048566, 425679, 2760801, 104914, 2192072, 3707591, 3108693, 1422918, 3771229, 3147192, 1878324])
(2, 4) SparseBinaryVector([338684, 2583821, 3186438, 201159, 1925861, 2628240, 3485437, 2163581, 1501156, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1878324])
(3, 5) SparseBinaryVector([338684, 2939559, 4027746, 2933374, 2598269, 1125973, 719811, 865895, 4022504, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1878324])
(4, 6) SparseBinaryVector([338684, 3863178, 4099204, 1507944, 3730901, 1675367, 2546295, 3029243, 1897510, 2797623, 3707591, 3416862, 1422918, 3771229, 3147192, 1878324])
(5, 7) SparseBinaryVector([338684, 1633415, 1034650, 3292414, 3977351, 1321382, 2884495, 3321774, 934986, 2797623, 799052, 961559, 1422918, 3771229, 3147192, 1878324])
(6, 8) SparseBinaryVector([338684, 3137690, 768641, 1074088, 1838455, 35150, 718648, 1985840, 950739, 2797623, 2374206, 4035949, 2735073, 3771229, 3147192, 1878324])
(0, 3) SparseBinaryVector([338684, 152056, 1587099, 3456382, 2184528, 2536557, 425679, 1244243, 2550509, 682070, 3707591, 722757, 1830222, 3771229, 1542365, 1878324])
(1, 4) SparseBinaryVector([338684, 868995, 730403, 201159, 1925861, 2048566, 3485437, 2237456, 3842784, 2192072, 3707591, 3108693, 1422918, 3771229, 1542365, 1878324])
(2, 5) SparseBinaryVector([338684, 2583821, 3186438, 2933374, 2598269, 2628240, 719811, 855676, 2923441, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 1878324])
(3, 6) SparseBinaryVector([338684, 2939559, 4027746, 1507944, 3730901, 1125973, 2546295, 728234, 1902291, 2797623, 3707591, 3416862, 1422918, 3771229, 1542365, 1878324])
(4, 7) SparseBinaryVector([338684, 3863178, 4099204, 3292414, 3977351, 1675367, 2884495, 3079952, 2260285, 2797623, 799052, 961559, 1422918, 3771229, 1542365, 1878324])
(5, 8) SparseBinaryVector([338684, 1633415, 1034650, 1074088, 1838455, 1321382, 718648, 986822, 1636580, 2797623, 2374206, 4035949, 2735073, 3771229, 1542365, 1878324])
(0, 4) SparseBinaryVector([338684, 152056, 1587099, 201159, 1925861, 2536557, 3485437, 168112, 1435902, 682070, 3707591, 722757, 1830222, 3771229, 1425381, 1878324])
(1, 5) SparseBinaryVector([338684, 868995, 730403, 2933374, 2598269, 2048566, 719811, 1280921, 1153513, 2192072, 3707591, 3108693, 1422918, 3771229, 1425381, 1878324])
(2, 6) SparseBinaryVector([338684, 2583821, 3186438, 1507944, 3730901, 2628240, 2546295, 1093221, 2283690, 2797623, 3707591, 3416862, 1422918, 3771229, 1425381, 1878324])
(3, 7) SparseBinaryVector([338684, 2939559, 4027746, 3292414, 3977351, 1125973, 2884495, 1990931, 47546, 2797623, 799052, 961559, 1422918, 3771229, 1425381, 1878324])
(4, 8) SparseBinaryVector([338684, 3863178, 4099204, 1074088, 1838455, 1675367, 718648, 2194255, 56236, 2797623, 2374206, 4035949, 2735073, 3771229, 1425381, 1878324])
(0, 5) SparseBinaryVector([338684, 152056, 1587099, 2933374, 2598269, 2536557, 719811, 4121896, 2495887, 682070, 3707591, 722757, 1830222, 3771229, 3457465, 1878324])
(1, 6) SparseBinaryVector([338684, 868995, 730403, 1507944, 3730901, 2048566, 2546295, 3678571, 1399142, 2192072, 3707591, 3108693, 1422918, 3771229, 3457465, 1878324])
(2, 7) SparseBinaryVector([338684, 2583821, 3186438, 3292414, 3977351, 2628240, 2884495, 3997647, 570088, 2797623, 799052, 961559, 1422918, 3771229, 3457465, 1878324])
(3, 8) SparseBinaryVector([338684, 2939559, 4027746, 1074088, 1838455, 1125973, 718648, 1421467, 1292977, 2797623, 2374206, 4035949, 2735073, 3771229, 3457465, 1878324])
(0, 6) SparseBinaryVector([338684, 152056, 1587099, 1507944, 3730901, 2536557, 2546295, 937425, 1393524, 682070, 3707591, 722757, 1830222, 3771229, 122813, 1878324])
(1, 7) SparseBinaryVector([338684, 868995, 730403, 3292414, 3977351, 2048566, 2884495, 1263235, 1641865, 2192072, 799052, 3108693, 1422918, 3771229, 122813, 1878324])
(2, 8) SparseBinaryVector([338684, 2583821, 3186438, 1074088, 1838455, 2628240, 718648, 3700544, 429493, 2797623, 2374206, 4035949, 2735073, 3771229, 122813, 1878324])
(0, 7) SparseBinaryVector([338684, 152056, 1587099, 3292414, 3977351, 2536557, 2884495, 3999289, 1429677, 682070, 799052, 1723495, 1830222, 3771229, 122813, 1878324])
(1, 8) SparseBinaryVector([338684, 868995, 730403, 1074088, 1838455, 2048566, 718648, 3353576, 3274825, 2192072, 2374206, 3108693, 2735073, 3771229, 122813, 1878324])

Example 9
What 's next ?
(0, 2) SparseBinaryVector([338684, 152056, 3153101, 560026, 3394490, 369464, 1188623, 348103, 2703610, 4056670, 3505883, 722757, 494552, 3771229, 3147192, 826924])
(1, 3) SparseBinaryVector([338684, 2450029, 3725094, 2641446, 3977351, 2599693, 2218537, 519080, 974525, 2345114, 799052, 2764380, 2935200, 3771229, 3147192, 826924])
(2, 4) SparseBinaryVector([338684, 2234394, 726304, 1074088, 1838455, 3530492, 718648, 2145978, 1320114, 1327392, 2374206, 2272562, 2735073, 3771229, 3147192, 826924])
(0, 3) SparseBinaryVector([338684, 152056, 3153101, 2641446, 3977351, 369464, 2218537, 3999289, 3906301, 4056670, 799052, 1723495, 1785531, 3771229, 1542365, 826924])
(1, 4) SparseBinaryVector([338684, 2450029, 3725094, 1074088, 1838455, 2599693, 718648, 488184, 415535, 2345114, 2374206, 2298740, 2935200, 3771229, 1542365, 826924])
===========================================================
python -m ldp.parsing.evalb
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)
[test/evalb unofficial] pass
===========================================================
python -m ldp.math.test.tests
Not a display environment
[dsigmoid test] pass
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)
102 active features

# testing logistic
gradient: OK cosine similarity: 1
gradient: OK cosine similarity: 1
gradient: OK cosine similarity: 1
gradient: OK cosine similarity: 1
gradient: OK cosine similarity: 1

# testing linear
gradient: OK cosine similarity: 1
gradient: OK cosine similarity: 1
gradient: OK cosine similarity: 1
gradient: OK cosine similarity: 1
gradient: OK cosine similarity: 1

step= 51
[-0.02530285 -0.         -0.02650942 -0.         -0.01154698 -0.        ]
[-0.02530285 -0.         -0.02650942  0.         -0.01154698  0.        ]
===========================================================
python -m ldp.math.test.sparse
Not a display environment
SparseVectorHash({5: 1.0, 6: 60.0})
[test_sparse_vector_hash] pass
[test_sparse_vector] pass
[test_sparse_vector_hash_lazyops] pass
[test_sparse_binary_vector] pass
===========================================================
python -m ldp.parsing.util
Not a display environment
basic binarize/unbinarize tests.
binarize/unbinarize PTB.
===========================================================
python -m ldp.cp.test.tiny
Not a display environment
Sentence:
Papa ate the caviar with the spoon .
Derivation:
(ROOT
  (S
    (NP (N Papa))
    (VP
      (V ate)
      (NP
        (NP (D the) (N caviar))
        (PP (P with) (NP (D the) (N spoon))))))
  (. .))
pushes: 0 0 err=0 ok

span(2,7) = 0: the caviar with the spoon
pushes: 0 0 err=0 ok

span(2,7) = 1: the caviar with the spoon
pushes: 0 0 err=0 ok
===========================================================
python -m ldp.dp.test.correctness --examples 20 --maxlength 15 --seed 0 --delta 0.5 --grammar medium
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)
==============================================================
Example 0, length 5: Ms. Haag plays Elianti .
gamma = 1
prune =  22.2% (2/9)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0      3
        same         0     0      4
unprune decr         0     0      2
==============================================================
Example 1, length 12: The luxury auto maker last year sold 1,214 cars in the U.S.
gamma = 1
prune =  50.8% (33/65)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     14
        incr         0     0     12
        same         0     0     13
unprune decr         0     0     10
        incr         0     0     12
        same         0     0     13
==============================================================
Example 2, length 15: BELL INDUSTRIES Inc. increased its quarterly to 10 cents from seven cents a share .
gamma = 1
prune =  45.2% ( 47/104)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     14
        incr         0     0     12
        same         0     0     70
unprune decr         0     0     10
        incr         0     0     20
        same         0     0     52
==============================================================
Example 3, length 9: The new rate will be payable Feb. 15 .
gamma = 1
prune =  54.3% (19/35)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     14
        incr         0     0     12
        same         0     0     86
unprune decr         0     0     10
        incr         0     0     26
        same         0     0     65
==============================================================
Example 4, length 8: A record date has n't been set .
gamma = 1
prune =  55.6% (15/27)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     14
        incr         0     0     12
        same         0     0     98
unprune decr         0     0     10
        incr         0     0     30
        same         0     0     76
==============================================================
Example 5, length 13: `` Apparently the commission did not really believe in this ideal . ''
gamma = 1
prune =  51.9% (40/77)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     24
        incr         0     0     15
        same         0     0    122
unprune decr         0     0     11
        incr         0     0     39
        same         0     0    106
==============================================================
Example 6, length 15: The SEC will probably vote on the proposal early next year , he said .
gamma = 1
prune =  55.8% ( 58/104)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     24
        incr         0     0     15
        same         0     0    168
unprune decr         0     0     11
        incr         0     0     39
        same         0     0    164
==============================================================
Example 7, length 9: Not all those who wrote oppose the changes .
gamma = 1
prune =  51.4% (18/35)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     31
        incr         0     0     18
        same         0     0    175
unprune decr         0     0     16
        incr         0     0     40
        same         0     0    176
==============================================================
Example 8, length 10: The SEC 's Mr. Lane vehemently disputed those estimates .
gamma = 1
prune =  50.0% (22/44)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     31
        incr         0     0     18
        same         0     0    197
unprune decr         0     0     16
        incr         0     0     50
        same         0     0    188
==============================================================
Example 9, length 10: Some 4,300 institutions are part of the pension fund .
gamma = 1
prune =  50.0% (22/44)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     36
        incr         0     0     24
        same         0     0    208
unprune decr         0     0     16
        incr         0     0     55
        same         0     0    205
==============================================================
Example 10, length 11: Richard Stoltzman has taken a gentler , more audience-friendly approach .
gamma = 1
prune =  44.4% (24/54)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     44
        incr         0     0     25
        same         0     0    229
unprune decr         0     0     20
        incr         0     0     57
        same         0     0    223
==============================================================
Example 11, length 12: He believes in what he plays , and he plays superbly .
gamma = 1
prune =  53.8% (35/65)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     44
        incr         0     0     25
        same         0     0    259
unprune decr         0     0     20
        incr         0     0     57
        same         0     0    258
==============================================================
Example 12, length 7: Bach 's `` Air '' followed .
gamma = 1
prune =  60.0% (12/20)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     44
        incr         0     0     25
        same         0     0    267
unprune decr         0     0     20
        incr         0     0     58
        same         0     0    269
==============================================================
Example 13, length 12: That went over the permissible line for warm and fuzzy feelings .
gamma = 1
prune =  55.4% (36/65)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     54
        incr         0     0     28
        same         0     0    283
unprune decr         0     0     28
        incr         0     0     60
        same         0     0    295
==============================================================
Example 14, length 15: Was this why some of the audience departed before or during the second half ?
gamma = 1
prune =  54.8% ( 57/104)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     67
        incr         0     0     31
        same         0     0    314
unprune decr         0     0     32
        incr         0     0     62
        same         0     0    346
==============================================================
Example 15, length 9: Or was it because Ms. Collins had gone ?
gamma = 1
prune =  51.4% (18/35)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     67
        incr         0     0     31
        same         0     0    331
unprune decr         0     0     32
        incr         0     0     64
        same         0     0    362
==============================================================
Example 16, length 8: Is this the future of chamber music ?
gamma = 1
prune =  59.3% (16/27)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     67
        incr         0     0     31
        same         0     0    342
unprune decr         0     0     32
        incr         0     0     68
        same         0     0    374
==============================================================
Example 17, length 6: Slides to illustrate Shostakovich quartets ?
gamma = 1
prune =  35.7% ( 5/14)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     67
        incr         0     0     31
        same         0     0    351
unprune decr         0     0     32
        incr         0     0     70
        same         0     0    377
==============================================================
Example 18, length 11: Ms. Waleson is a free-lance writer based in New York .
gamma = 1
prune =  57.4% (31/54)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     67
        incr         0     0     31
        same         0     0    374
unprune decr         0     0     32
        incr         0     0     70
        same         0     0    408
==============================================================
Example 19, length 15: UNESCO is now holding its biennial meetings in Paris to devise its next projects .
gamma = 1
prune =  51.0% ( 53/104)

Error types
=================================
               n_error  rate  total
action  delta                      
prune   decr         0     0     80
        incr         0     0     35
        same         0     0    408
unprune decr         0     0     37
        incr         0     0     74
        same         0     0    452
===========================================================
python -m ldp.parsing.ptb
Not a display environment
n_sentences: dev 1700
n_sentences: test 2416
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)
===========================================================
python -m ldp.cp.test.correctness --seed 0 --maxlength 15 --examples 20 --aggressive 0.5
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)
==============================================================
example: 0 length: 5
ok
==============================================================
example: 1 length: 12
ok
==============================================================
example: 2 length: 15
ok
==============================================================
example: 3 length: 9
ok
==============================================================
example: 4 length: 8
ok
==============================================================
example: 5 length: 13
ok
==============================================================
example: 6 length: 15
ok
==============================================================
example: 7 length: 9
tie
ok
==============================================================
example: 8 length: 10
ok
==============================================================
example: 9 length: 10
ok
==============================================================
example: 10 length: 11
ok
==============================================================
example: 11 length: 12
ok
==============================================================
example: 12 length: 7
ok
==============================================================
example: 13 length: 12
ok
==============================================================
example: 14 length: 15
tie
ok
==============================================================
example: 15 length: 9
ok
==============================================================
example: 16 length: 8
ok
==============================================================
example: 17 length: 6
ok
==============================================================
example: 18 length: 11
ok
==============================================================
example: 19 length: 15
ok
==============================================================
DONE

===========================================================
python -m ldp.cp.test.correctness --seed 0 --maxlength 15 --examples 20 --aggressive 0.5 --boolean
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)
==============================================================
example: 0 length: 5
pops: 436 436 err=0 ok
pops: 351 351 err=0 ok
pops: 360 360 err=0 ok
pops: 360 360 err=0 ok
pops: 360 360 err=0 ok
pops: 360 360 err=0 ok
pops: 359 359 err=0 ok
pops: 360 360 err=0 ok
pops: 366 366 err=0 ok
ok
==============================================================
example: 1 length: 12
pops: 1803 1803 err=0 ok
pops: 1842 1842 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1726 1726 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1726 1726 err=0 ok
pops: 1723 1723 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1719 1719 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1841 1841 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1764 1764 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1726 1726 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1723 1723 err=0 ok
pops: 1723 1723 err=0 ok
pops: 1721 1721 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1726 1726 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1715 1715 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1720 1720 err=0 ok
pops: 1842 1842 err=0 ok
pops: 1726 1726 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1725 1725 err=0 ok
pops: 1803 1803 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1688 1688 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1725 1725 err=0 ok
pops: 1495 1495 err=0 ok
pops: 1726 1726 err=0 ok
pops: 1726 1726 err=0 ok
pops: 1686 1686 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1842 1842 err=0 ok
pops: 1802 1802 err=0 ok
pops: 1674 1674 err=0 ok
pops: 1686 1686 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1726 1726 err=0 ok
pops: 1764 1764 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1804 1804 err=0 ok
pops: 1612 1612 err=0 ok
pops: 1721 1721 err=0 ok
pops: 1802 1802 err=0 ok
ok
==============================================================
example: 2 length: 15
pops: 2606 2606 err=0 ok
pops: 2567 2567 err=0 ok
pops: 2688 2688 err=0 ok
pops: 2687 2687 err=0 ok
pops: 2610 2610 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2725 2725 err=0 ok
pops: 2607 2607 err=0 ok
pops: 2649 2649 err=0 ok
pops: 2453 2453 err=0 ok
pops: 2725 2725 err=0 ok
pops: 2600 2600 err=0 ok
pops: 2690 2690 err=0 ok
pops: 2687 2687 err=0 ok
pops: 2610 2610 err=0 ok
pops: 2536 2536 err=0 ok
pops: 2728 2728 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2609 2609 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2687 2687 err=0 ok
pops: 2451 2451 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2649 2649 err=0 ok
pops: 2609 2609 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2609 2609 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2609 2609 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2723 2723 err=0 ok
pops: 2610 2610 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2602 2602 err=0 ok
pops: 2691 2691 err=0 ok
pops: 2649 2649 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2575 2575 err=0 ok
pops: 2725 2725 err=0 ok
pops: 2610 2610 err=0 ok
pops: 2649 2649 err=0 ok
pops: 2498 2498 err=0 ok
pops: 2018 2018 err=0 ok
pops: 2733 2733 err=0 ok
pops: 2573 2573 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2601 2601 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2687 2687 err=0 ok
pops: 2606 2606 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2691 2691 err=0 ok
pops: 2695 2695 err=0 ok
pops: 2609 2609 err=0 ok
pops: 2568 2568 err=0 ok
pops: 2690 2690 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2732 2732 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2411 2411 err=0 ok
pops: 2674 2674 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2603 2603 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2727 2727 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2687 2687 err=0 ok
pops: 2610 2610 err=0 ok
pops: 2694 2694 err=0 ok
pops: 2573 2573 err=0 ok
pops: 2729 2729 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2561 2561 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2609 2609 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2687 2687 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2610 2610 err=0 ok
pops: 2687 2687 err=0 ok
pops: 2126 2126 err=0 ok
pops: 2605 2605 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2609 2609 err=0 ok
pops: 2691 2691 err=0 ok
pops: 2611 2611 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2687 2687 err=0 ok
pops: 2604 2604 err=0 ok
pops: 2523 2523 err=0 ok
pops: 2689 2689 err=0 ok
pops: 2608 2608 err=0 ok
pops: 2688 2688 err=0 ok
pops: 2610 2610 err=0 ok
pops: 2689 2689 err=0 ok
ok
==============================================================
example: 3 length: 9
pops: 998 998 err=0 ok
pops: 999 999 err=0 ok
pops: 1000 1000 err=0 ok
pops: 922 922 err=0 ok
pops: 883 883 err=0 ok
pops: 923 923 err=0 ok
pops: 1000 1000 err=0 ok
pops: 998 998 err=0 ok
pops: 999 999 err=0 ok
pops: 1036 1036 err=0 ok
pops: 920 920 err=0 ok
pops: 921 921 err=0 ok
pops: 998 998 err=0 ok
pops: 911 911 err=0 ok
pops: 960 960 err=0 ok
pops: 922 922 err=0 ok
pops: 880 880 err=0 ok
pops: 931 931 err=0 ok
pops: 921 921 err=0 ok
pops: 874 874 err=0 ok
pops: 1036 1036 err=0 ok
pops: 998 998 err=0 ok
pops: 920 920 err=0 ok
pops: 998 998 err=0 ok
pops: 920 920 err=0 ok
pops: 921 921 err=0 ok
pops: 998 998 err=0 ok
pops: 798 798 err=0 ok
pops: 921 921 err=0 ok
pops: 786 786 err=0 ok
pops: 922 922 err=0 ok
pops: 1000 1000 err=0 ok
pops: 922 922 err=0 ok
pops: 999 999 err=0 ok
pops: 922 922 err=0 ok
ok
==============================================================
example: 4 length: 8
pops: 724 724 err=0 ok
pops: 802 802 err=0 ok
pops: 800 800 err=0 ok
pops: 800 800 err=0 ok
pops: 722 722 err=0 ok
pops: 724 724 err=0 ok
pops: 724 724 err=0 ok
pops: 724 724 err=0 ok
pops: 722 722 err=0 ok
pops: 722 722 err=0 ok
pops: 800 800 err=0 ok
pops: 724 724 err=0 ok
pops: 802 802 err=0 ok
pops: 724 724 err=0 ok
pops: 800 800 err=0 ok
pops: 686 686 err=0 ok
pops: 711 711 err=0 ok
pops: 793 793 err=0 ok
pops: 800 800 err=0 ok
pops: 686 686 err=0 ok
pops: 686 686 err=0 ok
pops: 561 561 err=0 ok
pops: 800 800 err=0 ok
pops: 802 802 err=0 ok
pops: 762 762 err=0 ok
pops: 800 800 err=0 ok
pops: 648 648 err=0 ok
ok
==============================================================
example: 5 length: 13
pops: 1787 1787 err=0 ok
pops: 1711 1711 err=0 ok
pops: 1724 1724 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1859 1859 err=0 ok
pops: 1827 1827 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1827 1827 err=0 ok
pops: 1819 1819 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1743 1743 err=0 ok
pops: 1829 1829 err=0 ok
pops: 1827 1827 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1827 1827 err=0 ok
pops: 1829 1829 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1711 1711 err=0 ok
pops: 1830 1830 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1508 1508 err=0 ok
pops: 1853 1853 err=0 ok
pops: 1821 1821 err=0 ok
pops: 1745 1745 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1743 1743 err=0 ok
pops: 1711 1711 err=0 ok
pops: 1738 1738 err=0 ok
pops: 1745 1745 err=0 ok
pops: 1830 1830 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1711 1711 err=0 ok
pops: 1829 1829 err=0 ok
pops: 1746 1746 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1703 1703 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1830 1830 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1829 1829 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1825 1825 err=0 ok
pops: 1827 1827 err=0 ok
pops: 1705 1705 err=0 ok
pops: 1825 1825 err=0 ok
pops: 1825 1825 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1825 1825 err=0 ok
pops: 1279 1279 err=0 ok
pops: 1745 1745 err=0 ok
pops: 1825 1825 err=0 ok
pops: 1831 1831 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1747 1747 err=0 ok
pops: 1749 1749 err=0 ok
pops: 1827 1827 err=0 ok
pops: 1745 1745 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1829 1829 err=0 ok
pops: 1787 1787 err=0 ok
pops: 1673 1673 err=0 ok
pops: 1738 1738 err=0 ok
pops: 1845 1845 err=0 ok
pops: 1829 1829 err=0 ok
ok
==============================================================
example: 6 length: 15
pops: 2245 2245 err=0 ok
pops: 2404 2404 err=0 ok
pops: 2334 2334 err=0 ok
pops: 2246 2246 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2326 2326 err=0 ok
pops: 2244 2244 err=0 ok
pops: 2328 2328 err=0 ok
pops: 2328 2328 err=0 ok
pops: 2245 2245 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2335 2335 err=0 ok
pops: 2219 2219 err=0 ok
pops: 2329 2329 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2246 2246 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2330 2330 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2248 2248 err=0 ok
pops: 2330 2330 err=0 ok
pops: 2181 2181 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2251 2251 err=0 ok
pops: 2247 2247 err=0 ok
pops: 2199 2199 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2328 2328 err=0 ok
pops: 2210 2210 err=0 ok
pops: 2243 2243 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2208 2208 err=0 ok
pops: 2248 2248 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2334 2334 err=0 ok
pops: 2246 2246 err=0 ok
pops: 2334 2334 err=0 ok
pops: 2161 2161 err=0 ok
pops: 2326 2326 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2329 2329 err=0 ok
pops: 2336 2336 err=0 ok
pops: 2158 2158 err=0 ok
pops: 2247 2247 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2247 2247 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2211 2211 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2335 2335 err=0 ok
pops: 2230 2230 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2327 2327 err=0 ok
pops: 2247 2247 err=0 ok
pops: 1727 1727 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2343 2343 err=0 ok
pops: 2329 2329 err=0 ok
pops: 2415 2415 err=0 ok
pops: 2249 2249 err=0 ok
pops: 1782 1782 err=0 ok
pops: 2267 2267 err=0 ok
pops: 2247 2247 err=0 ok
pops: 2248 2248 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2327 2327 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2240 2240 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2246 2246 err=0 ok
pops: 2327 2327 err=0 ok
pops: 2329 2329 err=0 ok
pops: 2173 2173 err=0 ok
pops: 2326 2326 err=0 ok
pops: 2244 2244 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2248 2248 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2245 2245 err=0 ok
pops: 2330 2330 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2258 2258 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2252 2252 err=0 ok
pops: 2332 2332 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2203 2203 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2329 2329 err=0 ok
pops: 2287 2287 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2323 2323 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2327 2327 err=0 ok
pops: 2325 2325 err=0 ok
ok
==============================================================
example: 7 length: 9
pops: 1124 1124 err=0 ok
pops: 1125 1125 err=0 ok
pops: 1212 1212 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1202 1202 err=0 ok
pops: 1124 1124 err=0 ok
pops: 1207 1207 err=0 ok
pops: 1202 1202 err=0 ok
pops: 1012 1012 err=0 ok
pops: 1124 1124 err=0 ok
pops: 1124 1124 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1088 1088 err=0 ok
pops: 1202 1202 err=0 ok
pops: 1124 1124 err=0 ok
pops: 1131 1131 err=0 ok
pops: 1207 1207 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1202 1202 err=0 ok
pops: 1202 1202 err=0 ok
pops: 1124 1124 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1124 1124 err=0 ok
pops: 1125 1125 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1207 1207 err=0 ok
pops: 995 995 err=0 ok
pops: 1034 1034 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1204 1204 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1126 1126 err=0 ok
pops: 1126 1126 err=0 ok
ok
==============================================================
example: 8 length: 10
pops: 608 608 err=0 ok
pops: 793 793 err=0 ok
pops: 792 792 err=0 ok
pops: 868 868 err=0 ok
pops: 829 829 err=0 ok
pops: 905 905 err=0 ok
pops: 867 867 err=0 ok
pops: 829 829 err=0 ok
pops: 791 791 err=0 ok
pops: 717 717 err=0 ok
pops: 753 753 err=0 ok
pops: 871 871 err=0 ok
pops: 867 867 err=0 ok
pops: 904 904 err=0 ok
pops: 869 869 err=0 ok
pops: 829 829 err=0 ok
pops: 850 850 err=0 ok
pops: 945 945 err=0 ok
pops: 909 909 err=0 ok
pops: 791 791 err=0 ok
pops: 793 793 err=0 ok
pops: 570 570 err=0 ok
pops: 867 867 err=0 ok
pops: 903 903 err=0 ok
pops: 906 906 err=0 ok
pops: 864 864 err=0 ok
pops: 867 867 err=0 ok
pops: 755 755 err=0 ok
pops: 906 906 err=0 ok
pops: 753 753 err=0 ok
pops: 829 829 err=0 ok
pops: 829 829 err=0 ok
pops: 868 868 err=0 ok
pops: 679 679 err=0 ok
pops: 717 717 err=0 ok
pops: 867 867 err=0 ok
pops: 491 491 err=0 ok
pops: 790 790 err=0 ok
pops: 868 868 err=0 ok
pops: 867 867 err=0 ok
pops: 829 829 err=0 ok
pops: 906 906 err=0 ok
pops: 791 791 err=0 ok
pops: 868 868 err=0 ok
ok
==============================================================
example: 9 length: 10
pops: 865 865 err=0 ok
pops: 1022 1022 err=0 ok
pops: 1175 1175 err=0 ok
pops: 1022 1022 err=0 ok
pops: 975 975 err=0 ok
pops: 931 931 err=0 ok
pops: 1015 1015 err=0 ok
pops: 975 975 err=0 ok
pops: 935 935 err=0 ok
pops: 1246 1246 err=0 ok
pops: 735 735 err=0 ok
pops: 928 928 err=0 ok
pops: 908 908 err=0 ok
pops: 1042 1042 err=0 ok
pops: 1053 1053 err=0 ok
pops: 1015 1015 err=0 ok
pops: 905 905 err=0 ok
pops: 975 975 err=0 ok
pops: 937 937 err=0 ok
pops: 1015 1015 err=0 ok
pops: 975 975 err=0 ok
pops: 1013 1013 err=0 ok
pops: 1165 1165 err=0 ok
pops: 1206 1206 err=0 ok
pops: 932 932 err=0 ok
pops: 946 946 err=0 ok
pops: 975 975 err=0 ok
pops: 975 975 err=0 ok
pops: 935 935 err=0 ok
pops: 935 935 err=0 ok
pops: 975 975 err=0 ok
pops: 924 924 err=0 ok
pops: 889 889 err=0 ok
pops: 725 725 err=0 ok
pops: 1026 1026 err=0 ok
pops: 1016 1016 err=0 ok
pops: 922 922 err=0 ok
pops: 695 695 err=0 ok
pops: 1129 1129 err=0 ok
pops: 935 935 err=0 ok
pops: 975 975 err=0 ok
pops: 975 975 err=0 ok
pops: 935 935 err=0 ok
pops: 1051 1051 err=0 ok
ok
==============================================================
example: 10 length: 11
pops: 1176 1176 err=0 ok
pops: 1159 1159 err=0 ok
pops: 1205 1205 err=0 ok
pops: 1200 1200 err=0 ok
pops: 1240 1240 err=0 ok
pops: 1155 1155 err=0 ok
pops: 1239 1239 err=0 ok
pops: 1353 1353 err=0 ok
pops: 1317 1317 err=0 ok
pops: 1211 1211 err=0 ok
pops: 1363 1363 err=0 ok
pops: 1200 1200 err=0 ok
pops: 1405 1405 err=0 ok
pops: 1278 1278 err=0 ok
pops: 1316 1316 err=0 ok
pops: 1278 1278 err=0 ok
pops: 1238 1238 err=0 ok
pops: 1240 1240 err=0 ok
pops: 1240 1240 err=0 ok
pops: 1314 1314 err=0 ok
pops: 1209 1209 err=0 ok
pops: 1278 1278 err=0 ok
pops: 1326 1326 err=0 ok
pops: 1238 1238 err=0 ok
pops: 1239 1239 err=0 ok
pops: 1353 1353 err=0 ok
pops: 1116 1116 err=0 ok
pops: 1317 1317 err=0 ok
pops: 1240 1240 err=0 ok
pops: 1240 1240 err=0 ok
pops: 1238 1238 err=0 ok
pops: 1249 1249 err=0 ok
pops: 1278 1278 err=0 ok
pops: 1249 1249 err=0 ok
pops: 1403 1403 err=0 ok
pops: 1240 1240 err=0 ok
pops: 1316 1316 err=0 ok
pops: 1335 1335 err=0 ok
pops: 1316 1316 err=0 ok
pops: 1325 1325 err=0 ok
pops: 1327 1327 err=0 ok
pops: 1315 1315 err=0 ok
pops: 1406 1406 err=0 ok
pops: 1211 1211 err=0 ok
pops: 890 890 err=0 ok
pops: 1318 1318 err=0 ok
pops: 1361 1361 err=0 ok
pops: 1163 1163 err=0 ok
pops: 1316 1316 err=0 ok
pops: 1239 1239 err=0 ok
pops: 1362 1362 err=0 ok
pops: 1240 1240 err=0 ok
pops: 1240 1240 err=0 ok
pops: 1164 1164 err=0 ok
ok
==============================================================
example: 11 length: 12
pops: 1450 1450 err=0 ok
pops: 1074 1074 err=0 ok
pops: 1497 1497 err=0 ok
pops: 1218 1218 err=0 ok
pops: 1487 1487 err=0 ok
pops: 1336 1336 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1408 1408 err=0 ok
pops: 1481 1481 err=0 ok
pops: 1383 1383 err=0 ok
pops: 1499 1499 err=0 ok
pops: 1412 1412 err=0 ok
pops: 1410 1410 err=0 ok
pops: 1414 1414 err=0 ok
pops: 1489 1489 err=0 ok
pops: 1411 1411 err=0 ok
pops: 1488 1488 err=0 ok
pops: 1404 1404 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1617 1617 err=0 ok
pops: 1374 1374 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1605 1605 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1488 1488 err=0 ok
pops: 1410 1410 err=0 ok
pops: 1156 1156 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1407 1407 err=0 ok
pops: 1488 1488 err=0 ok
pops: 1603 1603 err=0 ok
pops: 1495 1495 err=0 ok
pops: 1411 1411 err=0 ok
pops: 1411 1411 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1509 1509 err=0 ok
pops: 1269 1269 err=0 ok
pops: 1410 1410 err=0 ok
pops: 1412 1412 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1490 1490 err=0 ok
pops: 1412 1412 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1405 1405 err=0 ok
pops: 1343 1343 err=0 ok
pops: 1472 1472 err=0 ok
pops: 1411 1411 err=0 ok
pops: 1450 1450 err=0 ok
pops: 1036 1036 err=0 ok
pops: 1488 1488 err=0 ok
pops: 1413 1413 err=0 ok
pops: 1525 1525 err=0 ok
pops: 1489 1489 err=0 ok
pops: 1367 1367 err=0 ok
pops: 1576 1576 err=0 ok
pops: 1409 1409 err=0 ok
pops: 1410 1410 err=0 ok
pops: 1493 1493 err=0 ok
pops: 1408 1408 err=0 ok
pops: 1421 1421 err=0 ok
pops: 1182 1182 err=0 ok
pops: 1413 1413 err=0 ok
pops: 1489 1489 err=0 ok
ok
==============================================================
example: 12 length: 7
pops: 712 712 err=0 ok
pops: 625 625 err=0 ok
pops: 666 666 err=0 ok
pops: 695 695 err=0 ok
pops: 710 710 err=0 ok
pops: 634 634 err=0 ok
pops: 634 634 err=0 ok
pops: 620 620 err=0 ok
pops: 652 652 err=0 ok
pops: 634 634 err=0 ok
pops: 618 618 err=0 ok
pops: 634 634 err=0 ok
pops: 632 632 err=0 ok
pops: 634 634 err=0 ok
pops: 636 636 err=0 ok
pops: 634 634 err=0 ok
pops: 634 634 err=0 ok
pops: 641 641 err=0 ok
pops: 601 601 err=0 ok
pops: 613 613 err=0 ok
ok
==============================================================
example: 13 length: 12
pops: 1490 1490 err=0 ok
pops: 1644 1644 err=0 ok
pops: 1517 1517 err=0 ok
pops: 1568 1568 err=0 ok
pops: 1528 1528 err=0 ok
pops: 1568 1568 err=0 ok
pops: 1607 1607 err=0 ok
pops: 1568 1568 err=0 ok
pops: 1498 1498 err=0 ok
pops: 1527 1527 err=0 ok
pops: 1530 1530 err=0 ok
pops: 1528 1528 err=0 ok
pops: 1529 1529 err=0 ok
pops: 1410 1410 err=0 ok
pops: 1527 1527 err=0 ok
pops: 1529 1529 err=0 ok
pops: 1527 1527 err=0 ok
pops: 1692 1692 err=0 ok
pops: 1609 1609 err=0 ok
pops: 1530 1530 err=0 ok
pops: 1607 1607 err=0 ok
pops: 1608 1608 err=0 ok
pops: 1607 1607 err=0 ok
pops: 1532 1532 err=0 ok
pops: 1528 1528 err=0 ok
pops: 1528 1528 err=0 ok
pops: 1529 1529 err=0 ok
pops: 1645 1645 err=0 ok
pops: 1370 1370 err=0 ok
pops: 1568 1568 err=0 ok
pops: 1527 1527 err=0 ok
pops: 1246 1246 err=0 ok
pops: 1612 1612 err=0 ok
pops: 1529 1529 err=0 ok
pops: 1525 1525 err=0 ok
pops: 1644 1644 err=0 ok
pops: 1646 1646 err=0 ok
pops: 1529 1529 err=0 ok
pops: 1606 1606 err=0 ok
pops: 1647 1647 err=0 ok
pops: 1568 1568 err=0 ok
pops: 1528 1528 err=0 ok
pops: 1645 1645 err=0 ok
pops: 1410 1410 err=0 ok
pops: 1607 1607 err=0 ok
pops: 1568 1568 err=0 ok
pops: 1568 1568 err=0 ok
pops: 1612 1612 err=0 ok
pops: 1203 1203 err=0 ok
pops: 1608 1608 err=0 ok
pops: 1646 1646 err=0 ok
pops: 1527 1527 err=0 ok
pops: 1606 1606 err=0 ok
pops: 1373 1373 err=0 ok
pops: 1529 1529 err=0 ok
pops: 1607 1607 err=0 ok
pops: 1610 1610 err=0 ok
pops: 1654 1654 err=0 ok
pops: 1568 1568 err=0 ok
pops: 1647 1647 err=0 ok
pops: 1529 1529 err=0 ok
pops: 1527 1527 err=0 ok
pops: 1630 1630 err=0 ok
pops: 1530 1530 err=0 ok
pops: 1529 1529 err=0 ok
ok
==============================================================
example: 14 length: 15
pops: 2091 2091 err=0 ok
pops: 1975 1975 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2093 2093 err=0 ok
pops: 1929 1929 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2012 2012 err=0 ok
pops: 2053 2053 err=0 ok
pops: 1973 1973 err=0 ok
pops: 2016 2016 err=0 ok
pops: 2012 2012 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2012 2012 err=0 ok
pops: 2012 2012 err=0 ok
pops: 2012 2012 err=0 ok
pops: 1974 1974 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2015 2015 err=0 ok
pops: 2092 2092 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2134 2134 err=0 ok
pops: 2015 2015 err=0 ok
pops: 2137 2137 err=0 ok
pops: 2013 2013 err=0 ok
pops: 2014 2014 err=0 ok
pops: 2091 2091 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2130 2130 err=0 ok
pops: 2092 2092 err=0 ok
pops: 2016 2016 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2094 2094 err=0 ok
pops: 2013 2013 err=0 ok
pops: 2013 2013 err=0 ok
pops: 2011 2011 err=0 ok
pops: 2181 2181 err=0 ok
pops: 1967 1967 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2094 2094 err=0 ok
pops: 2157 2157 err=0 ok
pops: 1267 1267 err=0 ok
pops: 1735 1735 err=0 ok
pops: 2092 2092 err=0 ok
pops: 2176 2176 err=0 ok
pops: 2093 2093 err=0 ok
pops: 1973 1973 err=0 ok
pops: 2015 2015 err=0 ok
pops: 2012 2012 err=0 ok
pops: 2053 2053 err=0 ok
pops: 1894 1894 err=0 ok
pops: 1857 1857 err=0 ok
pops: 2095 2095 err=0 ok
pops: 2091 2091 err=0 ok
pops: 1966 1966 err=0 ok
pops: 2012 2012 err=0 ok
pops: 2092 2092 err=0 ok
pops: 1968 1968 err=0 ok
pops: 2091 2091 err=0 ok
pops: 1849 1849 err=0 ok
pops: 2011 2011 err=0 ok
pops: 2183 2183 err=0 ok
pops: 2171 2171 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2013 2013 err=0 ok
pops: 2091 2091 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2014 2014 err=0 ok
pops: 2091 2091 err=0 ok
pops: 2013 2013 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2167 2167 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2193 2193 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2093 2093 err=0 ok
pops: 1890 1890 err=0 ok
pops: 1892 1892 err=0 ok
pops: 2014 2014 err=0 ok
pops: 1975 1975 err=0 ok
pops: 2096 2096 err=0 ok
pops: 2132 2132 err=0 ok
pops: 2095 2095 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2008 2008 err=0 ok
pops: 2094 2094 err=0 ok
pops: 2095 2095 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2010 2010 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2091 2091 err=0 ok
pops: 2094 2094 err=0 ok
pops: 2015 2015 err=0 ok
pops: 2011 2011 err=0 ok
pops: 2053 2053 err=0 ok
pops: 2093 2093 err=0 ok
pops: 2092 2092 err=0 ok
pops: 2130 2130 err=0 ok
pops: 2015 2015 err=0 ok
ok
==============================================================
example: 15 length: 9
pops: 990 990 err=0 ok
pops: 880 880 err=0 ok
pops: 921 921 err=0 ok
pops: 919 919 err=0 ok
pops: 918 918 err=0 ok
pops: 994 994 err=0 ok
pops: 1001 1001 err=0 ok
pops: 996 996 err=0 ok
pops: 997 997 err=0 ok
pops: 918 918 err=0 ok
pops: 915 915 err=0 ok
pops: 922 922 err=0 ok
pops: 999 999 err=0 ok
pops: 1007 1007 err=0 ok
pops: 996 996 err=0 ok
pops: 919 919 err=0 ok
pops: 915 915 err=0 ok
pops: 938 938 err=0 ok
pops: 918 918 err=0 ok
pops: 998 998 err=0 ok
pops: 999 999 err=0 ok
pops: 997 997 err=0 ok
pops: 918 918 err=0 ok
pops: 921 921 err=0 ok
pops: 917 917 err=0 ok
pops: 887 887 err=0 ok
pops: 919 919 err=0 ok
pops: 841 841 err=0 ok
pops: 995 995 err=0 ok
pops: 920 920 err=0 ok
pops: 917 917 err=0 ok
pops: 998 998 err=0 ok
pops: 883 883 err=0 ok
pops: 1003 1003 err=0 ok
pops: 875 875 err=0 ok
ok
==============================================================
example: 16 length: 8
pops: 789 789 err=0 ok
pops: 783 783 err=0 ok
pops: 795 795 err=0 ok
pops: 783 783 err=0 ok
pops: 794 794 err=0 ok
pops: 912 912 err=0 ok
pops: 874 874 err=0 ok
pops: 793 793 err=0 ok
pops: 794 794 err=0 ok
pops: 795 795 err=0 ok
pops: 876 876 err=0 ok
pops: 914 914 err=0 ok
pops: 914 914 err=0 ok
pops: 795 795 err=0 ok
pops: 914 914 err=0 ok
pops: 788 788 err=0 ok
pops: 914 914 err=0 ok
pops: 866 866 err=0 ok
pops: 790 790 err=0 ok
pops: 790 790 err=0 ok
pops: 756 756 err=0 ok
pops: 778 778 err=0 ok
pops: 874 874 err=0 ok
pops: 834 834 err=0 ok
pops: 876 876 err=0 ok
pops: 792 792 err=0 ok
pops: 785 785 err=0 ok
ok
==============================================================
example: 17 length: 6
pops: 380 380 err=0 ok
pops: 382 382 err=0 ok
pops: 450 450 err=0 ok
pops: 460 460 err=0 ok
pops: 383 383 err=0 ok
pops: 382 382 err=0 ok
pops: 470 470 err=0 ok
pops: 352 352 err=0 ok
pops: 392 392 err=0 ok
pops: 461 461 err=0 ok
pops: 468 468 err=0 ok
pops: 472 472 err=0 ok
pops: 380 380 err=0 ok
pops: 354 354 err=0 ok
ok
==============================================================
example: 18 length: 11
pops: 1330 1330 err=0 ok
pops: 1292 1292 err=0 ok
pops: 1256 1256 err=0 ok
pops: 1292 1292 err=0 ok
pops: 1215 1215 err=0 ok
pops: 1214 1214 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1252 1252 err=0 ok
pops: 1332 1332 err=0 ok
pops: 1254 1254 err=0 ok
pops: 1329 1329 err=0 ok
pops: 1252 1252 err=0 ok
pops: 1337 1337 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1331 1331 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1292 1292 err=0 ok
pops: 1332 1332 err=0 ok
pops: 1252 1252 err=0 ok
pops: 1127 1127 err=0 ok
pops: 1250 1250 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1325 1325 err=0 ok
pops: 1249 1249 err=0 ok
pops: 1254 1254 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1244 1244 err=0 ok
pops: 1251 1251 err=0 ok
pops: 1169 1169 err=0 ok
pops: 934 934 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1254 1254 err=0 ok
pops: 1245 1245 err=0 ok
pops: 1332 1332 err=0 ok
pops: 1331 1331 err=0 ok
pops: 1252 1252 err=0 ok
pops: 1252 1252 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1249 1249 err=0 ok
pops: 708 708 err=0 ok
pops: 1254 1254 err=0 ok
pops: 1337 1337 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1330 1330 err=0 ok
pops: 1066 1066 err=0 ok
pops: 1334 1334 err=0 ok
pops: 1207 1207 err=0 ok
pops: 1256 1256 err=0 ok
pops: 1333 1333 err=0 ok
pops: 1254 1254 err=0 ok
pops: 1215 1215 err=0 ok
ok
==============================================================
example: 19 length: 15
pops: 2479 2479 err=0 ok
pops: 2393 2393 err=0 ok
pops: 2482 2482 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2363 2363 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2355 2355 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2478 2478 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2363 2363 err=0 ok
pops: 2373 2373 err=0 ok
pops: 2362 2362 err=0 ok
pops: 2482 2482 err=0 ok
pops: 2396 2396 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2400 2400 err=0 ok
pops: 2479 2479 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2479 2479 err=0 ok
pops: 2337 2337 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2400 2400 err=0 ok
pops: 2480 2480 err=0 ok
pops: 2479 2479 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2318 2318 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2439 2439 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2363 2363 err=0 ok
pops: 2478 2478 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2249 2249 err=0 ok
pops: 2479 2479 err=0 ok
pops: 2481 2481 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2400 2400 err=0 ok
pops: 2486 2486 err=0 ok
pops: 2297 2297 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2356 2356 err=0 ok
pops: 2400 2400 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2485 2485 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2254 2254 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2481 2481 err=0 ok
pops: 2364 2364 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2354 2354 err=0 ok
pops: 2396 2396 err=0 ok
pops: 2325 2325 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2479 2479 err=0 ok
pops: 2485 2485 err=0 ok
pops: 2439 2439 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2399 2399 err=0 ok
pops: 2478 2478 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2410 2410 err=0 ok
pops: 2400 2400 err=0 ok
pops: 2365 2365 err=0 ok
pops: 2362 2362 err=0 ok
pops: 2396 2396 err=0 ok
pops: 2480 2480 err=0 ok
pops: 2478 2478 err=0 ok
pops: 2479 2479 err=0 ok
pops: 2401 2401 err=0 ok
pops: 2479 2479 err=0 ok
pops: 2479 2479 err=0 ok
pops: 2324 2324 err=0 ok
pops: 2400 2400 err=0 ok
pops: 2477 2477 err=0 ok
pops: 2483 2483 err=0 ok
pops: 2484 2484 err=0 ok
pops: 2401 2401 err=0 ok
ok
==============================================================
DONE

===========================================================
python -m ldp.lols --grammar medium --train 100 --dev 0 --maxlength 10 --iterations 10 --minibatch 10 --tradeoff 0.0005 --classifier PERCEPTRON -C -12 --accuracy evalb_corpus --runtime pops --initializer BODENSTAB_GOLD --roll-out CP --seed 0
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)

Iter 1
Training...
#csc-examples 2617
train/new_policy
reward:    0.30208 *best so far*
accuracy:  0.78865
runtime:   973.14000

Iter 2
Training...
#csc-examples 2617
train/new_policy
reward:    0.31929 *best so far*
accuracy:  0.78865
runtime:   938.71000

Iter 3
Training...
#csc-examples 2617
train/new_policy
reward:    0.33150 *best so far*
accuracy:  0.78865
runtime:   914.30000

Iter 4
Training...
#csc-examples 2617
train/new_policy
reward:    0.35289 *best so far*
accuracy:  0.79642
runtime:   887.06000

Iter 5
Training...
#csc-examples 2617
train/new_policy
reward:    0.36873 *best so far*
accuracy:  0.79940
runtime:   861.34000

Iter 6
Training...
#csc-examples 2617
train/new_policy
reward:    0.37966 *best so far*
accuracy:  0.79940
runtime:   839.48000

Iter 7
Training...
#csc-examples 2617
train/new_policy
reward:    0.39762 *best so far*
accuracy:  0.80506
runtime:   814.88000

Iter 8
Training...
#csc-examples 2617
train/new_policy
reward:    0.40383 *best so far*
accuracy:  0.80386
runtime:   800.07000

Iter 9
Training...
#csc-examples 2617
train/new_policy
reward:    0.41837 *best so far*
accuracy:  0.80712
runtime:   777.50000

Iter 10
Training...
#csc-examples 2617
train/new_policy
reward:    0.42543 *best so far*
accuracy:  0.80564
runtime:   760.41000

DONE!
===========================================================
python -m ldp.lols --grammar medium --train 100 --dev 0 --maxlength 10 --iterations 10 --minibatch 10 --tradeoff 0.0005 --classifier PERCEPTRON -C -12 --accuracy evalb_avg --runtime pops --initializer BODENSTAB_GOLD --roll-out CP --seed 0
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)

Iter 1
Training...
#csc-examples 2617
train/new_policy
reward:    0.30291 *best so far*
accuracy:  0.78948
runtime:   973.14000

Iter 2
Training...
#csc-examples 2617
train/new_policy
reward:    0.32108 *best so far*
accuracy:  0.79191
runtime:   941.65000

Iter 3
Training...
#csc-examples 2617
train/new_policy
reward:    0.33340 *best so far*
accuracy:  0.78948
runtime:   912.17000

Iter 4
Training...
#csc-examples 2617
train/new_policy
reward:    0.36617 *best so far*
accuracy:  0.79752
runtime:   862.70000

Iter 5
Training...
#csc-examples 2617
train/new_policy
reward:    0.38972 *best so far*
accuracy:  0.81135
runtime:   843.27000

Iter 6
Training...
#csc-examples 2617
train/new_policy
reward:    0.41210 *best so far*
accuracy:  0.81613
runtime:   808.05000

Iter 7
Training...
#csc-examples 2617
train/new_policy
reward:    0.42412 *best so far*
accuracy:  0.81483
runtime:   781.41000

Iter 8
Training...
#csc-examples 2617
train/new_policy
reward:    0.44971 *best so far*
accuracy:  0.82013
runtime:   740.84000

Iter 9
Training...
#csc-examples 2617
train/new_policy
reward:    0.47514 *best so far*
accuracy:  0.82935
runtime:   708.42000

Iter 10
Training...
#csc-examples 2617
train/new_policy
reward:    0.49483 *best so far*
accuracy:  0.83647
runtime:   683.29000

DONE!
===========================================================
python -m ldp.lols --grammar medium --train 10 --dev 0 --maxlength 10 --dev 10 --iterations 10 --minibatch 10 --tradeoff 0.1 --classifier ADAGRAD -C -12 --accuracy expected_recall_corpus --runtime mask --initializer BODENSTAB_GOLD --roll-out DP --learning-rate 0.1 --seed 0
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)

Iter 1
Training...
#csc-examples 281
train/new_policy
reward:    -2.27097 *best so far*
accuracy:  0.53903
runtime:   28.10000
dev/new_policy
reward:    -1.57705 *best so far*
accuracy:  0.54295
runtime:   21.20000

Iter 2
Training...
#csc-examples 281
train/new_policy
reward:    -2.27097 
accuracy:  0.53903
runtime:   28.10000
dev/new_policy
reward:    -1.57705 
accuracy:  0.54295
runtime:   21.20000

Iter 3
Training...
#csc-examples 281
train/new_policy
reward:    -1.89556 *best so far*
accuracy:  0.54444
runtime:   24.40000
dev/new_policy
reward:    -1.21638 *best so far*
accuracy:  0.55362
runtime:   17.70000

Iter 4
Training...
#csc-examples 281
train/new_policy
reward:    -1.49935 *best so far*
accuracy:  0.57065
runtime:   20.70000
dev/new_policy
reward:    -1.12604 *best so far*
accuracy:  0.55396
runtime:   16.80000

Iter 5
Training...
#csc-examples 281
train/new_policy
reward:    -1.10355 *best so far*
accuracy:  0.59645
runtime:   17.00000
dev/new_policy
reward:    -0.97932 *best so far*
accuracy:  0.55068
runtime:   15.30000

Iter 6
Training...
#csc-examples 281
train/new_policy
reward:    -0.76304 *best so far*
accuracy:  0.68696
runtime:   14.50000
dev/new_policy
reward:    -0.77673 *best so far*
accuracy:  0.55327
runtime:   13.30000

Iter 7
Training...
#csc-examples 281
train/new_policy
reward:    -0.55284 *best so far*
accuracy:  0.70716
runtime:   12.60000
dev/new_policy
reward:    -0.65890 *best so far*
accuracy:  0.53110
runtime:   11.90000

Iter 8
Training...
#csc-examples 281
train/new_policy
reward:    -0.40333 *best so far*
accuracy:  0.73667
runtime:   11.40000
dev/new_policy
reward:    -0.54958 *best so far*
accuracy:  0.56042
runtime:   11.10000

Iter 9
Training...
#csc-examples 281
train/new_policy
reward:    -0.29709 *best so far*
accuracy:  0.74291
runtime:   10.40000
dev/new_policy
reward:    -0.42587 *best so far*
accuracy:  0.53413
runtime:   9.60000

Iter 10
Training...
#csc-examples 281
train/new_policy
reward:    -0.26708 *best so far*
accuracy:  0.74292
runtime:   10.10000
dev/new_policy
reward:    -0.40969 *best so far*
accuracy:  0.48031
runtime:   8.90000

DONE!
===========================================================
python -m ldp.lols --grammar medium --train 10 --dev 0 --maxlength 10 --dev 10 --iterations 10 --minibatch 10 --tradeoff 0.1 --classifier ADAGRAD -C -12 --accuracy expected_recall_avg --runtime mask --initializer BODENSTAB_GOLD --roll-out DP --learning-rate 0.1 --seed 0
Not a display environment
Grammar(name=medium rules=4740, lexrules=52118, vocab=44454, nonterm=98)

Iter 1
Training...
#csc-examples 281
train/new_policy
reward:    -2.26130 *best so far*
accuracy:  0.54870
runtime:   28.10000
dev/new_policy
reward:    -1.56185 *best so far*
accuracy:  0.55815
runtime:   21.20000

Iter 2
Training...
#csc-examples 281
train/new_policy
reward:    -1.09346 *best so far*
accuracy:  0.61654
runtime:   17.10000
dev/new_policy
reward:    -0.98959 *best so far*
accuracy:  0.56041
runtime:   15.50000

Iter 3
Training...
#csc-examples 281
train/new_policy
reward:    -0.31149 *best so far*
accuracy:  0.72851
runtime:   10.40000
dev/new_policy
reward:    -0.32993 *best so far*
accuracy:  0.55007
runtime:   8.80000

Iter 4
Training...
#csc-examples 281
train/new_policy
reward:    -0.16115 *best so far*
accuracy:  0.69885
runtime:   8.60000
dev/new_policy
reward:    -0.28502 *best so far*
accuracy:  0.49498
runtime:   7.80000

Iter 5
Training...
#csc-examples 281
train/new_policy
reward:    -0.07674 *best so far*
accuracy:  0.72326
runtime:   8.00000
dev/new_policy
reward:    -0.20033 *best so far*
accuracy:  0.46967
runtime:   6.70000

Iter 6
Training...
#csc-examples 281
train/new_policy
reward:    -0.03113 *best so far*
accuracy:  0.72887
runtime:   7.60000
dev/new_policy
reward:    -0.20033 
accuracy:  0.46967
runtime:   6.70000

Iter 7
Training...
#csc-examples 281
train/new_policy
reward:    -0.02398 *best so far*
accuracy:  0.71602
runtime:   7.40000
dev/new_policy
reward:    -0.16769 *best so far*
accuracy:  0.48231
runtime:   6.50000

Iter 8
Training...
#csc-examples 281
train/new_policy
reward:    0.01053 *best so far*
accuracy:  0.76053
runtime:   7.50000
dev/new_policy
reward:    -0.16769 
accuracy:  0.48231
runtime:   6.50000

Iter 9
Training...
#csc-examples 281
train/new_policy
reward:    0.01053 
accuracy:  0.76053
runtime:   7.50000
dev/new_policy
reward:    -0.16769 
accuracy:  0.48231
runtime:   6.50000

Iter 10
Training...
#csc-examples 281
train/new_policy
reward:    0.03163 *best so far*
accuracy:  0.76163
runtime:   7.30000
dev/new_policy
reward:    -0.16769 
accuracy:  0.48231
runtime:   6.50000

DONE!
